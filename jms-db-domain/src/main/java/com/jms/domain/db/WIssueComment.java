package com.jms.domain.db;
// Generated 2016-1-6 12:39:14 by Hibernate Tools 3.2.2.GA


import java.util.Date;
import java.util.HashSet;
import java.util.Set;
import javax.persistence.CascadeType;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import static javax.persistence.GenerationType.IDENTITY;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

/**
 * WIssueComment generated by hbm2java
 */
@Entity
@Table(name="w_issue_comment"
    ,catalog="jms3"
)
public class WIssueComment  implements java.io.Serializable {


     private Long idIssueComment;
     private WIssue WIssue;
     private WIssueComment WIssueComment;
     private Users users;
     private Date creationTime;
     private String comment;
     private Date modificationTime;
     private Set<WIssueComment> WIssueComments = new HashSet<WIssueComment>(0);
     private Set<WIssueDoc> WIssueDocs = new HashSet<WIssueDoc>(0);

    public WIssueComment() {
    }

    public WIssueComment(WIssue WIssue, WIssueComment WIssueComment, Users users, Date creationTime, String comment, Date modificationTime, Set<WIssueComment> WIssueComments, Set<WIssueDoc> WIssueDocs) {
       this.WIssue = WIssue;
       this.WIssueComment = WIssueComment;
       this.users = users;
       this.creationTime = creationTime;
       this.comment = comment;
       this.modificationTime = modificationTime;
       this.WIssueComments = WIssueComments;
       this.WIssueDocs = WIssueDocs;
    }
   
     @Id @GeneratedValue(strategy=IDENTITY)
    
    @Column(name="id_issue_comment", unique=true, nullable=false)
    public Long getIdIssueComment() {
        return this.idIssueComment;
    }
    
    public void setIdIssueComment(Long idIssueComment) {
        this.idIssueComment = idIssueComment;
    }
@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="id_issue")
    public WIssue getWIssue() {
        return this.WIssue;
    }
    
    public void setWIssue(WIssue WIssue) {
        this.WIssue = WIssue;
    }
@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="parent")
    public WIssueComment getWIssueComment() {
        return this.WIssueComment;
    }
    
    public void setWIssueComment(WIssueComment WIssueComment) {
        this.WIssueComment = WIssueComment;
    }
@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="creator")
    public Users getUsers() {
        return this.users;
    }
    
    public void setUsers(Users users) {
        this.users = users;
    }
    @Temporal(TemporalType.DATE)
    @Column(name="creation_time", length=10)
    public Date getCreationTime() {
        return this.creationTime;
    }
    
    public void setCreationTime(Date creationTime) {
        this.creationTime = creationTime;
    }
    
    @Column(name="comment", length=1024)
    public String getComment() {
        return this.comment;
    }
    
    public void setComment(String comment) {
        this.comment = comment;
    }
    @Temporal(TemporalType.DATE)
    @Column(name="modification_time", length=10)
    public Date getModificationTime() {
        return this.modificationTime;
    }
    
    public void setModificationTime(Date modificationTime) {
        this.modificationTime = modificationTime;
    }
@OneToMany(cascade=CascadeType.ALL, fetch=FetchType.LAZY, mappedBy="WIssueComment")
    public Set<WIssueComment> getWIssueComments() {
        return this.WIssueComments;
    }
    
    public void setWIssueComments(Set<WIssueComment> WIssueComments) {
        this.WIssueComments = WIssueComments;
    }
@OneToMany(cascade=CascadeType.ALL, fetch=FetchType.LAZY, mappedBy="WIssueComment")
    public Set<WIssueDoc> getWIssueDocs() {
        return this.WIssueDocs;
    }
    
    public void setWIssueDocs(Set<WIssueDoc> WIssueDocs) {
        this.WIssueDocs = WIssueDocs;
    }




}


