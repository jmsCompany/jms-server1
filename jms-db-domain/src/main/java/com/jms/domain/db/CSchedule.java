package com.jms.domain.db;
// Generated 2015-12-31 19:48:00 by Hibernate Tools 3.2.2.GA


import java.util.Date;
import java.util.HashSet;
import java.util.Set;
import javax.persistence.CascadeType;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import static javax.persistence.GenerationType.IDENTITY;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

/**
 * CSchedule generated by hbm2java
 */
@Entity
@Table(name="c_schedule"
    ,catalog="jms3"
)
public class CSchedule  implements java.io.Serializable {


     private Long idSchedule;
     private SysDicD sysDicD;
     private CRepeats CRepeats;
     private Users users;
     private String title;
     private String description;
     private Date creationTime;
     private Date startTime;
     private Date endTime;
     private Long isWholeday;
     private Date remind;
     private Date lazySet;
     private Set<CScheduleWatcher> CScheduleWatchers = new HashSet<CScheduleWatcher>(0);
     private Set<CScheduleDoc> CScheduleDocs = new HashSet<CScheduleDoc>(0);

    public CSchedule() {
    }

	
    public CSchedule(Date creationTime) {
        this.creationTime = creationTime;
    }
    public CSchedule(SysDicD sysDicD, CRepeats CRepeats, Users users, String title, String description, Date creationTime, Date startTime, Date endTime, Long isWholeday, Date remind, Date lazySet, Set<CScheduleWatcher> CScheduleWatchers, Set<CScheduleDoc> CScheduleDocs) {
       this.sysDicD = sysDicD;
       this.CRepeats = CRepeats;
       this.users = users;
       this.title = title;
       this.description = description;
       this.creationTime = creationTime;
       this.startTime = startTime;
       this.endTime = endTime;
       this.isWholeday = isWholeday;
       this.remind = remind;
       this.lazySet = lazySet;
       this.CScheduleWatchers = CScheduleWatchers;
       this.CScheduleDocs = CScheduleDocs;
    }
   
     @Id @GeneratedValue(strategy=IDENTITY)
    
    @Column(name="id_schedule", unique=true, nullable=false)
    public Long getIdSchedule() {
        return this.idSchedule;
    }
    
    public void setIdSchedule(Long idSchedule) {
        this.idSchedule = idSchedule;
    }
@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="schedule_type")
    public SysDicD getSysDicD() {
        return this.sysDicD;
    }
    
    public void setSysDicD(SysDicD sysDicD) {
        this.sysDicD = sysDicD;
    }
@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="id_repeat")
    public CRepeats getCRepeats() {
        return this.CRepeats;
    }
    
    public void setCRepeats(CRepeats CRepeats) {
        this.CRepeats = CRepeats;
    }
@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="creator")
    public Users getUsers() {
        return this.users;
    }
    
    public void setUsers(Users users) {
        this.users = users;
    }
    
    @Column(name="title", length=128)
    public String getTitle() {
        return this.title;
    }
    
    public void setTitle(String title) {
        this.title = title;
    }
    
    @Column(name="description", length=512)
    public String getDescription() {
        return this.description;
    }
    
    public void setDescription(String description) {
        this.description = description;
    }
    @Temporal(TemporalType.TIMESTAMP)
    @Column(name="creation_time", nullable=false, length=19)
    public Date getCreationTime() {
        return this.creationTime;
    }
    
    public void setCreationTime(Date creationTime) {
        this.creationTime = creationTime;
    }
    @Temporal(TemporalType.TIMESTAMP)
    @Column(name="start_time", length=19)
    public Date getStartTime() {
        return this.startTime;
    }
    
    public void setStartTime(Date startTime) {
        this.startTime = startTime;
    }
    @Temporal(TemporalType.TIMESTAMP)
    @Column(name="end_time", length=19)
    public Date getEndTime() {
        return this.endTime;
    }
    
    public void setEndTime(Date endTime) {
        this.endTime = endTime;
    }
    
    @Column(name="is_wholeday")
    public Long getIsWholeday() {
        return this.isWholeday;
    }
    
    public void setIsWholeday(Long isWholeday) {
        this.isWholeday = isWholeday;
    }
    @Temporal(TemporalType.TIMESTAMP)
    @Column(name="remind", length=19)
    public Date getRemind() {
        return this.remind;
    }
    
    public void setRemind(Date remind) {
        this.remind = remind;
    }
    @Temporal(TemporalType.TIMESTAMP)
    @Column(name="lazy_set", length=19)
    public Date getLazySet() {
        return this.lazySet;
    }
    
    public void setLazySet(Date lazySet) {
        this.lazySet = lazySet;
    }
@OneToMany(cascade=CascadeType.ALL, fetch=FetchType.LAZY, mappedBy="CSchedule")
    public Set<CScheduleWatcher> getCScheduleWatchers() {
        return this.CScheduleWatchers;
    }
    
    public void setCScheduleWatchers(Set<CScheduleWatcher> CScheduleWatchers) {
        this.CScheduleWatchers = CScheduleWatchers;
    }
@OneToMany(cascade=CascadeType.ALL, fetch=FetchType.LAZY, mappedBy="CSchedule")
    public Set<CScheduleDoc> getCScheduleDocs() {
        return this.CScheduleDocs;
    }
    
    public void setCScheduleDocs(Set<CScheduleDoc> CScheduleDocs) {
        this.CScheduleDocs = CScheduleDocs;
    }




}


