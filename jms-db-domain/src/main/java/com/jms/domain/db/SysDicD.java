package com.jms.domain.db;
// Generated 2016-1-6 12:39:14 by Hibernate Tools 3.2.2.GA


import java.util.HashSet;
import java.util.Set;
import javax.persistence.CascadeType;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import static javax.persistence.GenerationType.IDENTITY;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;

/**
 * SysDicD generated by hbm2java
 */
@Entity
@Table(name="sys_dic_d"
    ,catalog="jms3"
)
public class SysDicD  implements java.io.Serializable {


     private Long idDic;
     private SysDic sysDic;
     private String name;
     private Long enabled;
     private String description;
     private Long isDefault;
     private Set<Company> companiesForLocale = new HashSet<Company>(0);
     private Set<PPollParticipant> PPollParticipants = new HashSet<PPollParticipant>(0);
     private Set<Users> usersesForLocale = new HashSet<Users>(0);
     private Set<WTask> WTasksForStatus = new HashSet<WTask>(0);
     private Set<Users> usersesForGender = new HashSet<Users>(0);
     private Set<Users> usersesForScheme = new HashSet<Users>(0);
     private Set<Users> usersesForStatus = new HashSet<Users>(0);
     private Set<WTask> WTasksForPriority = new HashSet<WTask>(0);
     private Set<CSchedule> CSchedules = new HashSet<CSchedule>(0);
     private Set<WIssue> WIssuesForSourceType = new HashSet<WIssue>(0);
     private Set<WIssue> WIssuesForPriority = new HashSet<WIssue>(0);
     private Set<WIssue> WIssuesForStatus = new HashSet<WIssue>(0);
     private Set<AApplication> AApplications = new HashSet<AApplication>(0);
     private Set<Company> companiesForCompanyCategory = new HashSet<Company>(0);
     private Set<Company> companiesForScheme = new HashSet<Company>(0);
     private Set<PVote> PVotes = new HashSet<PVote>(0);
     private Set<Company> companiesForCompanySize = new HashSet<Company>(0);
     private Set<Company> companiesForCompanyType = new HashSet<Company>(0);
     private Set<PPoll> PPolls = new HashSet<PPoll>(0);
     private Set<AApplicationPhase> AApplicationPhases = new HashSet<AApplicationPhase>(0);
     private Set<Company> companiesForCompanyNature = new HashSet<Company>(0);
     private Set<Company> companiesForTaskType = new HashSet<Company>(0);
     private Set<WProject> WProjectsForStatus = new HashSet<WProject>(0);
     private Set<CRepeats> CRepeatses = new HashSet<CRepeats>(0);
     private Set<WProject> WProjectsForPriority = new HashSet<WProject>(0);

    public SysDicD() {
    }

	
    public SysDicD(String name, Long enabled, String description) {
        this.name = name;
        this.enabled = enabled;
        this.description = description;
    }
    public SysDicD(SysDic sysDic, String name, Long enabled, String description, Long isDefault, Set<Company> companiesForLocale, Set<PPollParticipant> PPollParticipants, Set<Users> usersesForLocale, Set<WTask> WTasksForStatus, Set<Users> usersesForGender, Set<Users> usersesForScheme, Set<Users> usersesForStatus, Set<WTask> WTasksForPriority, Set<CSchedule> CSchedules, Set<WIssue> WIssuesForSourceType, Set<WIssue> WIssuesForPriority, Set<WIssue> WIssuesForStatus, Set<AApplication> AApplications, Set<Company> companiesForCompanyCategory, Set<Company> companiesForScheme, Set<PVote> PVotes, Set<Company> companiesForCompanySize, Set<Company> companiesForCompanyType, Set<PPoll> PPolls, Set<AApplicationPhase> AApplicationPhases, Set<Company> companiesForCompanyNature, Set<Company> companiesForTaskType, Set<WProject> WProjectsForStatus, Set<CRepeats> CRepeatses, Set<WProject> WProjectsForPriority) {
       this.sysDic = sysDic;
       this.name = name;
       this.enabled = enabled;
       this.description = description;
       this.isDefault = isDefault;
       this.companiesForLocale = companiesForLocale;
       this.PPollParticipants = PPollParticipants;
       this.usersesForLocale = usersesForLocale;
       this.WTasksForStatus = WTasksForStatus;
       this.usersesForGender = usersesForGender;
       this.usersesForScheme = usersesForScheme;
       this.usersesForStatus = usersesForStatus;
       this.WTasksForPriority = WTasksForPriority;
       this.CSchedules = CSchedules;
       this.WIssuesForSourceType = WIssuesForSourceType;
       this.WIssuesForPriority = WIssuesForPriority;
       this.WIssuesForStatus = WIssuesForStatus;
       this.AApplications = AApplications;
       this.companiesForCompanyCategory = companiesForCompanyCategory;
       this.companiesForScheme = companiesForScheme;
       this.PVotes = PVotes;
       this.companiesForCompanySize = companiesForCompanySize;
       this.companiesForCompanyType = companiesForCompanyType;
       this.PPolls = PPolls;
       this.AApplicationPhases = AApplicationPhases;
       this.companiesForCompanyNature = companiesForCompanyNature;
       this.companiesForTaskType = companiesForTaskType;
       this.WProjectsForStatus = WProjectsForStatus;
       this.CRepeatses = CRepeatses;
       this.WProjectsForPriority = WProjectsForPriority;
    }
   
     @Id @GeneratedValue(strategy=IDENTITY)
    
    @Column(name="id_dic", unique=true, nullable=false)
    public Long getIdDic() {
        return this.idDic;
    }
    
    public void setIdDic(Long idDic) {
        this.idDic = idDic;
    }
@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="type")
    public SysDic getSysDic() {
        return this.sysDic;
    }
    
    public void setSysDic(SysDic sysDic) {
        this.sysDic = sysDic;
    }
    
    @Column(name="name", nullable=false, length=64)
    public String getName() {
        return this.name;
    }
    
    public void setName(String name) {
        this.name = name;
    }
    
    @Column(name="enabled", nullable=false)
    public Long getEnabled() {
        return this.enabled;
    }
    
    public void setEnabled(Long enabled) {
        this.enabled = enabled;
    }
    
    @Column(name="description", nullable=false, length=128)
    public String getDescription() {
        return this.description;
    }
    
    public void setDescription(String description) {
        this.description = description;
    }
    
    @Column(name="is_default")
    public Long getIsDefault() {
        return this.isDefault;
    }
    
    public void setIsDefault(Long isDefault) {
        this.isDefault = isDefault;
    }
@OneToMany(cascade=CascadeType.ALL, fetch=FetchType.LAZY, mappedBy="sysDicDByLocale")
    public Set<Company> getCompaniesForLocale() {
        return this.companiesForLocale;
    }
    
    public void setCompaniesForLocale(Set<Company> companiesForLocale) {
        this.companiesForLocale = companiesForLocale;
    }
@OneToMany(cascade=CascadeType.ALL, fetch=FetchType.LAZY, mappedBy="sysDicD")
    public Set<PPollParticipant> getPPollParticipants() {
        return this.PPollParticipants;
    }
    
    public void setPPollParticipants(Set<PPollParticipant> PPollParticipants) {
        this.PPollParticipants = PPollParticipants;
    }
@OneToMany(cascade=CascadeType.ALL, fetch=FetchType.LAZY, mappedBy="sysDicDByLocale")
    public Set<Users> getUsersesForLocale() {
        return this.usersesForLocale;
    }
    
    public void setUsersesForLocale(Set<Users> usersesForLocale) {
        this.usersesForLocale = usersesForLocale;
    }
@OneToMany(cascade=CascadeType.ALL, fetch=FetchType.LAZY, mappedBy="sysDicDByStatus")
    public Set<WTask> getWTasksForStatus() {
        return this.WTasksForStatus;
    }
    
    public void setWTasksForStatus(Set<WTask> WTasksForStatus) {
        this.WTasksForStatus = WTasksForStatus;
    }
@OneToMany(cascade=CascadeType.ALL, fetch=FetchType.LAZY, mappedBy="sysDicDByGender")
    public Set<Users> getUsersesForGender() {
        return this.usersesForGender;
    }
    
    public void setUsersesForGender(Set<Users> usersesForGender) {
        this.usersesForGender = usersesForGender;
    }
@OneToMany(cascade=CascadeType.ALL, fetch=FetchType.LAZY, mappedBy="sysDicDByScheme")
    public Set<Users> getUsersesForScheme() {
        return this.usersesForScheme;
    }
    
    public void setUsersesForScheme(Set<Users> usersesForScheme) {
        this.usersesForScheme = usersesForScheme;
    }
@OneToMany(cascade=CascadeType.ALL, fetch=FetchType.LAZY, mappedBy="sysDicDByStatus")
    public Set<Users> getUsersesForStatus() {
        return this.usersesForStatus;
    }
    
    public void setUsersesForStatus(Set<Users> usersesForStatus) {
        this.usersesForStatus = usersesForStatus;
    }
@OneToMany(cascade=CascadeType.ALL, fetch=FetchType.LAZY, mappedBy="sysDicDByPriority")
    public Set<WTask> getWTasksForPriority() {
        return this.WTasksForPriority;
    }
    
    public void setWTasksForPriority(Set<WTask> WTasksForPriority) {
        this.WTasksForPriority = WTasksForPriority;
    }
@OneToMany(cascade=CascadeType.ALL, fetch=FetchType.LAZY, mappedBy="sysDicD")
    public Set<CSchedule> getCSchedules() {
        return this.CSchedules;
    }
    
    public void setCSchedules(Set<CSchedule> CSchedules) {
        this.CSchedules = CSchedules;
    }
@OneToMany(cascade=CascadeType.ALL, fetch=FetchType.LAZY, mappedBy="sysDicDBySourceType")
    public Set<WIssue> getWIssuesForSourceType() {
        return this.WIssuesForSourceType;
    }
    
    public void setWIssuesForSourceType(Set<WIssue> WIssuesForSourceType) {
        this.WIssuesForSourceType = WIssuesForSourceType;
    }
@OneToMany(cascade=CascadeType.ALL, fetch=FetchType.LAZY, mappedBy="sysDicDByPriority")
    public Set<WIssue> getWIssuesForPriority() {
        return this.WIssuesForPriority;
    }
    
    public void setWIssuesForPriority(Set<WIssue> WIssuesForPriority) {
        this.WIssuesForPriority = WIssuesForPriority;
    }
@OneToMany(cascade=CascadeType.ALL, fetch=FetchType.LAZY, mappedBy="sysDicDByStatus")
    public Set<WIssue> getWIssuesForStatus() {
        return this.WIssuesForStatus;
    }
    
    public void setWIssuesForStatus(Set<WIssue> WIssuesForStatus) {
        this.WIssuesForStatus = WIssuesForStatus;
    }
@OneToMany(cascade=CascadeType.ALL, fetch=FetchType.LAZY, mappedBy="sysDicD")
    public Set<AApplication> getAApplications() {
        return this.AApplications;
    }
    
    public void setAApplications(Set<AApplication> AApplications) {
        this.AApplications = AApplications;
    }
@OneToMany(cascade=CascadeType.ALL, fetch=FetchType.LAZY, mappedBy="sysDicDByCompanyCategory")
    public Set<Company> getCompaniesForCompanyCategory() {
        return this.companiesForCompanyCategory;
    }
    
    public void setCompaniesForCompanyCategory(Set<Company> companiesForCompanyCategory) {
        this.companiesForCompanyCategory = companiesForCompanyCategory;
    }
@OneToMany(cascade=CascadeType.ALL, fetch=FetchType.LAZY, mappedBy="sysDicDByScheme")
    public Set<Company> getCompaniesForScheme() {
        return this.companiesForScheme;
    }
    
    public void setCompaniesForScheme(Set<Company> companiesForScheme) {
        this.companiesForScheme = companiesForScheme;
    }
@OneToMany(cascade=CascadeType.ALL, fetch=FetchType.LAZY, mappedBy="sysDicD")
    public Set<PVote> getPVotes() {
        return this.PVotes;
    }
    
    public void setPVotes(Set<PVote> PVotes) {
        this.PVotes = PVotes;
    }
@OneToMany(cascade=CascadeType.ALL, fetch=FetchType.LAZY, mappedBy="sysDicDByCompanySize")
    public Set<Company> getCompaniesForCompanySize() {
        return this.companiesForCompanySize;
    }
    
    public void setCompaniesForCompanySize(Set<Company> companiesForCompanySize) {
        this.companiesForCompanySize = companiesForCompanySize;
    }
@OneToMany(cascade=CascadeType.ALL, fetch=FetchType.LAZY, mappedBy="sysDicDByCompanyType")
    public Set<Company> getCompaniesForCompanyType() {
        return this.companiesForCompanyType;
    }
    
    public void setCompaniesForCompanyType(Set<Company> companiesForCompanyType) {
        this.companiesForCompanyType = companiesForCompanyType;
    }
@OneToMany(cascade=CascadeType.ALL, fetch=FetchType.LAZY, mappedBy="sysDicD")
    public Set<PPoll> getPPolls() {
        return this.PPolls;
    }
    
    public void setPPolls(Set<PPoll> PPolls) {
        this.PPolls = PPolls;
    }
@OneToMany(cascade=CascadeType.ALL, fetch=FetchType.LAZY, mappedBy="sysDicD")
    public Set<AApplicationPhase> getAApplicationPhases() {
        return this.AApplicationPhases;
    }
    
    public void setAApplicationPhases(Set<AApplicationPhase> AApplicationPhases) {
        this.AApplicationPhases = AApplicationPhases;
    }
@OneToMany(cascade=CascadeType.ALL, fetch=FetchType.LAZY, mappedBy="sysDicDByCompanyNature")
    public Set<Company> getCompaniesForCompanyNature() {
        return this.companiesForCompanyNature;
    }
    
    public void setCompaniesForCompanyNature(Set<Company> companiesForCompanyNature) {
        this.companiesForCompanyNature = companiesForCompanyNature;
    }
@OneToMany(cascade=CascadeType.ALL, fetch=FetchType.LAZY, mappedBy="sysDicDByTaskType")
    public Set<Company> getCompaniesForTaskType() {
        return this.companiesForTaskType;
    }
    
    public void setCompaniesForTaskType(Set<Company> companiesForTaskType) {
        this.companiesForTaskType = companiesForTaskType;
    }
@OneToMany(cascade=CascadeType.ALL, fetch=FetchType.LAZY, mappedBy="sysDicDByStatus")
    public Set<WProject> getWProjectsForStatus() {
        return this.WProjectsForStatus;
    }
    
    public void setWProjectsForStatus(Set<WProject> WProjectsForStatus) {
        this.WProjectsForStatus = WProjectsForStatus;
    }
@OneToMany(cascade=CascadeType.ALL, fetch=FetchType.LAZY, mappedBy="sysDicD")
    public Set<CRepeats> getCRepeatses() {
        return this.CRepeatses;
    }
    
    public void setCRepeatses(Set<CRepeats> CRepeatses) {
        this.CRepeatses = CRepeatses;
    }
@OneToMany(cascade=CascadeType.ALL, fetch=FetchType.LAZY, mappedBy="sysDicDByPriority")
    public Set<WProject> getWProjectsForPriority() {
        return this.WProjectsForPriority;
    }
    
    public void setWProjectsForPriority(Set<WProject> WProjectsForPriority) {
        this.WProjectsForPriority = WProjectsForPriority;
    }




}


