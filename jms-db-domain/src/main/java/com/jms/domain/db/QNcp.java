package com.jms.domain.db;
// Generated 2016-3-31 16:15:17 by Hibernate Tools 3.2.2.GA


import java.util.HashSet;
import java.util.Set;
import javax.persistence.CascadeType;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import static javax.persistence.GenerationType.IDENTITY;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;

/**
 * QNcp generated by hbm2java
 */
@Entity
@Table(name="q_ncp"
    ,catalog="jms5"
)
public class QNcp  implements java.io.Serializable {


     private Long idNcp;
     private Users usersByPublish;
     private QStatusDic QStatusDic;
     private Users usersByAudit02;
     private Users usersByAudit03;
     private Company company;
     private Users usersByAudit01;
     private QLocationDic QLocationDic;
     private Users usersByResponse;
     private SMaterial SMaterial;
     private Users usersByCountersign;
     private Users usersByOwner;
     private Users usersByApproval03;
     private QConclusionDic QConclusionDic;
     private Users usersByApproval02;
     private String ncpNo;
     private String lotNo;
     private Long qty;
     private String des;
     private String comment;
     private String improvementAction;
     private Set<QNcpDisposal> QNcpDisposals = new HashSet<QNcpDisposal>(0);

    public QNcp() {
    }

    public QNcp(Users usersByPublish, QStatusDic QStatusDic, Users usersByAudit02, Users usersByAudit03, Company company, Users usersByAudit01, QLocationDic QLocationDic, Users usersByResponse, SMaterial SMaterial, Users usersByCountersign, Users usersByOwner, Users usersByApproval03, QConclusionDic QConclusionDic, Users usersByApproval02, String ncpNo, String lotNo, Long qty, String des, String comment, String improvementAction, Set<QNcpDisposal> QNcpDisposals) {
       this.usersByPublish = usersByPublish;
       this.QStatusDic = QStatusDic;
       this.usersByAudit02 = usersByAudit02;
       this.usersByAudit03 = usersByAudit03;
       this.company = company;
       this.usersByAudit01 = usersByAudit01;
       this.QLocationDic = QLocationDic;
       this.usersByResponse = usersByResponse;
       this.SMaterial = SMaterial;
       this.usersByCountersign = usersByCountersign;
       this.usersByOwner = usersByOwner;
       this.usersByApproval03 = usersByApproval03;
       this.QConclusionDic = QConclusionDic;
       this.usersByApproval02 = usersByApproval02;
       this.ncpNo = ncpNo;
       this.lotNo = lotNo;
       this.qty = qty;
       this.des = des;
       this.comment = comment;
       this.improvementAction = improvementAction;
       this.QNcpDisposals = QNcpDisposals;
    }
   
     @Id @GeneratedValue(strategy=IDENTITY)
    
    @Column(name="id_ncp", unique=true, nullable=false)
    public Long getIdNcp() {
        return this.idNcp;
    }
    
    public void setIdNcp(Long idNcp) {
        this.idNcp = idNcp;
    }
@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="publish")
    public Users getUsersByPublish() {
        return this.usersByPublish;
    }
    
    public void setUsersByPublish(Users usersByPublish) {
        this.usersByPublish = usersByPublish;
    }
@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="id_qstatus")
    public QStatusDic getQStatusDic() {
        return this.QStatusDic;
    }
    
    public void setQStatusDic(QStatusDic QStatusDic) {
        this.QStatusDic = QStatusDic;
    }
@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="audit02")
    public Users getUsersByAudit02() {
        return this.usersByAudit02;
    }
    
    public void setUsersByAudit02(Users usersByAudit02) {
        this.usersByAudit02 = usersByAudit02;
    }
@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="audit03")
    public Users getUsersByAudit03() {
        return this.usersByAudit03;
    }
    
    public void setUsersByAudit03(Users usersByAudit03) {
        this.usersByAudit03 = usersByAudit03;
    }
@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="id_company")
    public Company getCompany() {
        return this.company;
    }
    
    public void setCompany(Company company) {
        this.company = company;
    }
@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="audit01")
    public Users getUsersByAudit01() {
        return this.usersByAudit01;
    }
    
    public void setUsersByAudit01(Users usersByAudit01) {
        this.usersByAudit01 = usersByAudit01;
    }
@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="id_location")
    public QLocationDic getQLocationDic() {
        return this.QLocationDic;
    }
    
    public void setQLocationDic(QLocationDic QLocationDic) {
        this.QLocationDic = QLocationDic;
    }
@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="response")
    public Users getUsersByResponse() {
        return this.usersByResponse;
    }
    
    public void setUsersByResponse(Users usersByResponse) {
        this.usersByResponse = usersByResponse;
    }
@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="id_material")
    public SMaterial getSMaterial() {
        return this.SMaterial;
    }
    
    public void setSMaterial(SMaterial SMaterial) {
        this.SMaterial = SMaterial;
    }
@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="countersign")
    public Users getUsersByCountersign() {
        return this.usersByCountersign;
    }
    
    public void setUsersByCountersign(Users usersByCountersign) {
        this.usersByCountersign = usersByCountersign;
    }
@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="owner")
    public Users getUsersByOwner() {
        return this.usersByOwner;
    }
    
    public void setUsersByOwner(Users usersByOwner) {
        this.usersByOwner = usersByOwner;
    }
@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="approval03")
    public Users getUsersByApproval03() {
        return this.usersByApproval03;
    }
    
    public void setUsersByApproval03(Users usersByApproval03) {
        this.usersByApproval03 = usersByApproval03;
    }
@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="concern_or_not")
    public QConclusionDic getQConclusionDic() {
        return this.QConclusionDic;
    }
    
    public void setQConclusionDic(QConclusionDic QConclusionDic) {
        this.QConclusionDic = QConclusionDic;
    }
@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="approval02")
    public Users getUsersByApproval02() {
        return this.usersByApproval02;
    }
    
    public void setUsersByApproval02(Users usersByApproval02) {
        this.usersByApproval02 = usersByApproval02;
    }
    
    @Column(name="ncp_no", length=32)
    public String getNcpNo() {
        return this.ncpNo;
    }
    
    public void setNcpNo(String ncpNo) {
        this.ncpNo = ncpNo;
    }
    
    @Column(name="lot_no", length=64)
    public String getLotNo() {
        return this.lotNo;
    }
    
    public void setLotNo(String lotNo) {
        this.lotNo = lotNo;
    }
    
    @Column(name="qty")
    public Long getQty() {
        return this.qty;
    }
    
    public void setQty(Long qty) {
        this.qty = qty;
    }
    
    @Column(name="des", length=1024)
    public String getDes() {
        return this.des;
    }
    
    public void setDes(String des) {
        this.des = des;
    }
    
    @Column(name="comment", length=1024)
    public String getComment() {
        return this.comment;
    }
    
    public void setComment(String comment) {
        this.comment = comment;
    }
    
    @Column(name="improvement_action", length=20)
    public String getImprovementAction() {
        return this.improvementAction;
    }
    
    public void setImprovementAction(String improvementAction) {
        this.improvementAction = improvementAction;
    }
@OneToMany(cascade=CascadeType.ALL, fetch=FetchType.LAZY, mappedBy="QNcp")
    public Set<QNcpDisposal> getQNcpDisposals() {
        return this.QNcpDisposals;
    }
    
    public void setQNcpDisposals(Set<QNcpDisposal> QNcpDisposals) {
        this.QNcpDisposals = QNcpDisposals;
    }




}


