package com.jms.domain.db;
// Generated 2015-12-31 19:48:00 by Hibernate Tools 3.2.2.GA


import java.util.Date;
import java.util.HashSet;
import java.util.Set;
import javax.persistence.CascadeType;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import static javax.persistence.GenerationType.IDENTITY;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;
import javax.persistence.Transient;

import com.jms.domain.db.AbstractSecuredEntity;
import com.jms.domain.db.Users;

/**
 * Groups generated by hbm2java
 */
@Entity
@Table(name="groups"
    ,catalog="jms3"
)
public class Groups  extends AbstractSecuredEntity  implements java.io.Serializable {


     private Long idGroup;
     private Company company;
     private Users users;
     private GroupType groupType;
     private String groupName;
     private String description;
     private Date creationTime;
     private Long seq;
     private Set<Receiver> receivers = new HashSet<Receiver>(0);
     private Set<GroupMembers> groupMemberses = new HashSet<GroupMembers>(0);
     private Set<GroupAuthorities> groupAuthoritieses = new HashSet<GroupAuthorities>(0);

    public Groups() {
    }

	
    public Groups(String groupName) {
        this.groupName = groupName;
    }
    public Groups(Company company, Users users, GroupType groupType, String groupName, String description, Date creationTime, Long seq, Set<Receiver> receivers, Set<GroupMembers> groupMemberses, Set<GroupAuthorities> groupAuthoritieses) {
       this.company = company;
       this.users = users;
       this.groupType = groupType;
       this.groupName = groupName;
       this.description = description;
       this.creationTime = creationTime;
       this.seq = seq;
       this.receivers = receivers;
       this.groupMemberses = groupMemberses;
       this.groupAuthoritieses = groupAuthoritieses;
    }
   
     @Id @GeneratedValue(strategy=IDENTITY)
    
    @Column(name="id_group", unique=true, nullable=false)
    public Long getIdGroup() {
        return this.idGroup;
    }
    
    public void setIdGroup(Long idGroup) {
        this.idGroup = idGroup;
    }
@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="id_company")
    public Company getCompany() {
        return this.company;
    }
    
    public void setCompany(Company company) {
        this.company = company;
    }
@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="creator")
    public Users getUsers() {
        return this.users;
    }
    
    public void setUsers(Users users) {
        this.users = users;
    }
@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="id_group_type")
    public GroupType getGroupType() {
        return this.groupType;
    }
    
    public void setGroupType(GroupType groupType) {
        this.groupType = groupType;
    }
    
    @Column(name="group_name", nullable=false, length=64)
    public String getGroupName() {
        return this.groupName;
    }
    
    public void setGroupName(String groupName) {
        this.groupName = groupName;
    }
    
    @Column(name="description", length=256)
    public String getDescription() {
        return this.description;
    }
    
    public void setDescription(String description) {
        this.description = description;
    }
    @Temporal(TemporalType.DATE)
    @Column(name="creation_time", length=10)
    public Date getCreationTime() {
        return this.creationTime;
    }
    
    public void setCreationTime(Date creationTime) {
        this.creationTime = creationTime;
    }
    
    @Column(name="seq")
    public Long getSeq() {
        return this.seq;
    }
    
    public void setSeq(Long seq) {
        this.seq = seq;
    }
@OneToMany(cascade=CascadeType.ALL, fetch=FetchType.LAZY, mappedBy="groups")
    public Set<Receiver> getReceivers() {
        return this.receivers;
    }
    
    public void setReceivers(Set<Receiver> receivers) {
        this.receivers = receivers;
    }
@OneToMany(cascade=CascadeType.ALL, fetch=FetchType.LAZY, mappedBy="groups")
    public Set<GroupMembers> getGroupMemberses() {
        return this.groupMemberses;
    }
    
    public void setGroupMemberses(Set<GroupMembers> groupMemberses) {
        this.groupMemberses = groupMemberses;
    }
@OneToMany(cascade=CascadeType.ALL, fetch=FetchType.LAZY, mappedBy="groups")
    public Set<GroupAuthorities> getGroupAuthoritieses() {
        return this.groupAuthoritieses;
    }
    
    public void setGroupAuthoritieses(Set<GroupAuthorities> groupAuthoritieses) {
        this.groupAuthoritieses = groupAuthoritieses;
    }

    @Override @Transient
    public Long getId() {
        return this.getIdGroup();
    }
   @Override  @Transient
  	public Users getUser() {
  		return this.getUsers();
  	}

	@Override
	public String toString()
	{
		return "群组名: " + this.getGroupName() +", 描述：" + this.getDescription();
	}


}


