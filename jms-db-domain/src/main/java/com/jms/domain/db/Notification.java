package com.jms.domain.db;
// Generated 2015-7-5 10:54:07 by Hibernate Tools 3.2.2.GA


import java.util.HashSet;
import java.util.Set;

import javax.persistence.CascadeType;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;

import static javax.persistence.GenerationType.IDENTITY;

import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;

import org.hibernate.envers.AuditTable;
import org.hibernate.envers.Audited;

/**
 * Notification generated by hbm2java
 */
@Audited
@AuditTable(catalog="jms_aud", value = "notification")
@Entity
@Table(name="notification"
    ,catalog="jms"
)
public class Notification  implements java.io.Serializable {


     private Long idNotification;
     private JmsEvent jmsEvent;
     private NotiType notiType;
     private Company company;
     private NotiMethod notiMethod;
     private Set<NotiInstance> notiInstances = new HashSet<NotiInstance>(0);

    public Notification() {
    }

    public Notification(JmsEvent jmsEvent, NotiType notiType, Company company, NotiMethod notiMethod, Set<NotiInstance> notiInstances) {
       this.jmsEvent = jmsEvent;
       this.notiType = notiType;
       this.company = company;
       this.notiMethod = notiMethod;
       this.notiInstances = notiInstances;
    }
   
     @Id @GeneratedValue(strategy=IDENTITY)
    
    @Column(name="ID_NOTIFICATION", unique=true, nullable=false)
    public Long getIdNotification() {
        return this.idNotification;
    }
    
    public void setIdNotification(Long idNotification) {
        this.idNotification = idNotification;
    }
@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="ID_EVENT")
    public JmsEvent getJmsEvent() {
        return this.jmsEvent;
    }
    
    public void setJmsEvent(JmsEvent jmsEvent) {
        this.jmsEvent = jmsEvent;
    }
@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="ID_NOTI_TYPE")
    public NotiType getNotiType() {
        return this.notiType;
    }
    
    public void setNotiType(NotiType notiType) {
        this.notiType = notiType;
    }
@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="ID_COMPANY")
    public Company getCompany() {
        return this.company;
    }
    
    public void setCompany(Company company) {
        this.company = company;
    }
@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="ID_NOTI_METHOD")
    public NotiMethod getNotiMethod() {
        return this.notiMethod;
    }
    
    public void setNotiMethod(NotiMethod notiMethod) {
        this.notiMethod = notiMethod;
    }
@OneToMany(cascade=CascadeType.ALL, fetch=FetchType.LAZY, mappedBy="notification")
    public Set<NotiInstance> getNotiInstances() {
        return this.notiInstances;
    }
    
    public void setNotiInstances(Set<NotiInstance> notiInstances) {
        this.notiInstances = notiInstances;
    }




}


