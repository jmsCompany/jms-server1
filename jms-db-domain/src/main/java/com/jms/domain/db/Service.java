package com.jms.domain.db;
// Generated 2016-1-6 12:39:14 by Hibernate Tools 3.2.2.GA


import java.util.HashSet;
import java.util.Set;
import javax.persistence.CascadeType;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import static javax.persistence.GenerationType.IDENTITY;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;

/**
 * Service generated by hbm2java
 */
@Entity
@Table(name="service"
    ,catalog="jms3"
)
public class Service  implements java.io.Serializable {


     private Long idService;
     private ServiceType serviceType;
     private String description;
     private Float payment;
     private Set<BuyRecord> buyRecords = new HashSet<BuyRecord>(0);

    public Service() {
    }

    public Service(ServiceType serviceType, String description, Float payment, Set<BuyRecord> buyRecords) {
       this.serviceType = serviceType;
       this.description = description;
       this.payment = payment;
       this.buyRecords = buyRecords;
    }
   
     @Id @GeneratedValue(strategy=IDENTITY)
    
    @Column(name="id_service", unique=true, nullable=false)
    public Long getIdService() {
        return this.idService;
    }
    
    public void setIdService(Long idService) {
        this.idService = idService;
    }
@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="id_service_type")
    public ServiceType getServiceType() {
        return this.serviceType;
    }
    
    public void setServiceType(ServiceType serviceType) {
        this.serviceType = serviceType;
    }
    
    @Column(name="description", length=20)
    public String getDescription() {
        return this.description;
    }
    
    public void setDescription(String description) {
        this.description = description;
    }
    
    @Column(name="payment", precision=12, scale=0)
    public Float getPayment() {
        return this.payment;
    }
    
    public void setPayment(Float payment) {
        this.payment = payment;
    }
@OneToMany(cascade=CascadeType.ALL, fetch=FetchType.LAZY, mappedBy="service")
    public Set<BuyRecord> getBuyRecords() {
        return this.buyRecords;
    }
    
    public void setBuyRecords(Set<BuyRecord> buyRecords) {
        this.buyRecords = buyRecords;
    }




}


