package com.jms.domain.db;
// Generated 2015-5-31 12:27:01 by Hibernate Tools 3.2.2.GA


import java.util.Date;
import java.util.HashSet;
import java.util.Set;
import javax.persistence.CascadeType;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import static javax.persistence.GenerationType.IDENTITY;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

/**
 * Project generated by hbm2java
 */
@Entity
@Table(name="project"
    ,catalog="jms"
)
public class Project  implements java.io.Serializable {


     private Integer idProject;
     private Company company;
     private String projectName;
     private String projectNumber;
     private Integer process;
     private String description;
     private Date expectStartTime;
     private Date expectEndTime;
     private Date startTime;
     private Date endTime;
     private int enabled;
     private Set<ProjectDoc> projectDocs = new HashSet<ProjectDoc>(0);
     private Set<ProjectParticipant> projectParticipants = new HashSet<ProjectParticipant>(0);
     private Set<Task> tasks = new HashSet<Task>(0);

    public Project() {
    }

	
    public Project(Company company, String projectName, int enabled) {
        this.company = company;
        this.projectName = projectName;
        this.enabled = enabled;
    }
    public Project(Company company, String projectName, String projectNumber, Integer process, String description, Date expectStartTime, Date expectEndTime, Date startTime, Date endTime, int enabled, Set<ProjectDoc> projectDocs, Set<ProjectParticipant> projectParticipants, Set<Task> tasks) {
       this.company = company;
       this.projectName = projectName;
       this.projectNumber = projectNumber;
       this.process = process;
       this.description = description;
       this.expectStartTime = expectStartTime;
       this.expectEndTime = expectEndTime;
       this.startTime = startTime;
       this.endTime = endTime;
       this.enabled = enabled;
       this.projectDocs = projectDocs;
       this.projectParticipants = projectParticipants;
       this.tasks = tasks;
    }
   
     @Id @GeneratedValue(strategy=IDENTITY)
    
    @Column(name="ID_PROJECT", unique=true, nullable=false)
    public Integer getIdProject() {
        return this.idProject;
    }
    
    public void setIdProject(Integer idProject) {
        this.idProject = idProject;
    }
@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="ID_COMPANY", nullable=false)
    public Company getCompany() {
        return this.company;
    }
    
    public void setCompany(Company company) {
        this.company = company;
    }
    
    @Column(name="PROJECT_NAME", nullable=false, length=64)
    public String getProjectName() {
        return this.projectName;
    }
    
    public void setProjectName(String projectName) {
        this.projectName = projectName;
    }
    
    @Column(name="PROJECT_NUMBER", length=64)
    public String getProjectNumber() {
        return this.projectNumber;
    }
    
    public void setProjectNumber(String projectNumber) {
        this.projectNumber = projectNumber;
    }
    
    @Column(name="PROCESS")
    public Integer getProcess() {
        return this.process;
    }
    
    public void setProcess(Integer process) {
        this.process = process;
    }
    
    @Column(name="DESCRIPTION", length=256)
    public String getDescription() {
        return this.description;
    }
    
    public void setDescription(String description) {
        this.description = description;
    }
    @Temporal(TemporalType.DATE)
    @Column(name="EXPECT_START_TIME", length=10)
    public Date getExpectStartTime() {
        return this.expectStartTime;
    }
    
    public void setExpectStartTime(Date expectStartTime) {
        this.expectStartTime = expectStartTime;
    }
    @Temporal(TemporalType.DATE)
    @Column(name="EXPECT_END_TIME", length=10)
    public Date getExpectEndTime() {
        return this.expectEndTime;
    }
    
    public void setExpectEndTime(Date expectEndTime) {
        this.expectEndTime = expectEndTime;
    }
    @Temporal(TemporalType.DATE)
    @Column(name="START_TIME", length=10)
    public Date getStartTime() {
        return this.startTime;
    }
    
    public void setStartTime(Date startTime) {
        this.startTime = startTime;
    }
    @Temporal(TemporalType.DATE)
    @Column(name="END_TIME", length=10)
    public Date getEndTime() {
        return this.endTime;
    }
    
    public void setEndTime(Date endTime) {
        this.endTime = endTime;
    }
    
    @Column(name="ENABLED", nullable=false)
    public int getEnabled() {
        return this.enabled;
    }
    
    public void setEnabled(int enabled) {
        this.enabled = enabled;
    }
@OneToMany(cascade=CascadeType.ALL, fetch=FetchType.LAZY, mappedBy="project")
    public Set<ProjectDoc> getProjectDocs() {
        return this.projectDocs;
    }
    
    public void setProjectDocs(Set<ProjectDoc> projectDocs) {
        this.projectDocs = projectDocs;
    }
@OneToMany(cascade=CascadeType.ALL, fetch=FetchType.LAZY, mappedBy="project")
    public Set<ProjectParticipant> getProjectParticipants() {
        return this.projectParticipants;
    }
    
    public void setProjectParticipants(Set<ProjectParticipant> projectParticipants) {
        this.projectParticipants = projectParticipants;
    }
@OneToMany(cascade=CascadeType.ALL, fetch=FetchType.LAZY, mappedBy="project")
    public Set<Task> getTasks() {
        return this.tasks;
    }
    
    public void setTasks(Set<Task> tasks) {
        this.tasks = tasks;
    }




}


