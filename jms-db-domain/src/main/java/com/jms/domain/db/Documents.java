package com.jms.domain.db;
// Generated 2015-5-31 12:27:01 by Hibernate Tools 3.2.2.GA


import java.util.HashSet;
import java.util.Set;
import javax.persistence.CascadeType;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import static javax.persistence.GenerationType.IDENTITY;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;

/**
 * Documents generated by hbm2java
 */
@Entity
@Table(name="documents"
    ,catalog="jms"
)
public class Documents  implements java.io.Serializable {


     private Integer idDocument;
     private Documents documents;
     private String fileName;
     private String name;
     private String description;
     private String relativePath;
     private Integer size;
     private Set<ProjectDoc> projectDocs = new HashSet<ProjectDoc>(0);
     private Set<Documents> documentses = new HashSet<Documents>(0);
     private Set<Task> tasks = new HashSet<Task>(0);
     private Set<TaskComment> taskComments = new HashSet<TaskComment>(0);
     private Set<Users> userses = new HashSet<Users>(0);

    public Documents() {
    }

    public Documents(Documents documents, String fileName, String name, String description, String relativePath, Integer size, Set<ProjectDoc> projectDocs, Set<Documents> documentses, Set<Task> tasks, Set<TaskComment> taskComments, Set<Users> userses) {
       this.documents = documents;
       this.fileName = fileName;
       this.name = name;
       this.description = description;
       this.relativePath = relativePath;
       this.size = size;
       this.projectDocs = projectDocs;
       this.documentses = documentses;
       this.tasks = tasks;
       this.taskComments = taskComments;
       this.userses = userses;
    }
   
     @Id @GeneratedValue(strategy=IDENTITY)
    
    @Column(name="ID_DOCUMENT", unique=true, nullable=false)
    public Integer getIdDocument() {
        return this.idDocument;
    }
    
    public void setIdDocument(Integer idDocument) {
        this.idDocument = idDocument;
    }
@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="PARENT")
    public Documents getDocuments() {
        return this.documents;
    }
    
    public void setDocuments(Documents documents) {
        this.documents = documents;
    }
    
    @Column(name="FILE_NAME", length=256)
    public String getFileName() {
        return this.fileName;
    }
    
    public void setFileName(String fileName) {
        this.fileName = fileName;
    }
    
    @Column(name="NAME", length=64)
    public String getName() {
        return this.name;
    }
    
    public void setName(String name) {
        this.name = name;
    }
    
    @Column(name="DESCRIPTION", length=256)
    public String getDescription() {
        return this.description;
    }
    
    public void setDescription(String description) {
        this.description = description;
    }
    
    @Column(name="RELATIVE_PATH", length=256)
    public String getRelativePath() {
        return this.relativePath;
    }
    
    public void setRelativePath(String relativePath) {
        this.relativePath = relativePath;
    }
    
    @Column(name="SIZE")
    public Integer getSize() {
        return this.size;
    }
    
    public void setSize(Integer size) {
        this.size = size;
    }
@OneToMany(cascade=CascadeType.ALL, fetch=FetchType.LAZY, mappedBy="documents")
    public Set<ProjectDoc> getProjectDocs() {
        return this.projectDocs;
    }
    
    public void setProjectDocs(Set<ProjectDoc> projectDocs) {
        this.projectDocs = projectDocs;
    }
@OneToMany(cascade=CascadeType.ALL, fetch=FetchType.LAZY, mappedBy="documents")
    public Set<Documents> getDocumentses() {
        return this.documentses;
    }
    
    public void setDocumentses(Set<Documents> documentses) {
        this.documentses = documentses;
    }
@OneToMany(cascade=CascadeType.ALL, fetch=FetchType.LAZY, mappedBy="documents")
    public Set<Task> getTasks() {
        return this.tasks;
    }
    
    public void setTasks(Set<Task> tasks) {
        this.tasks = tasks;
    }
@OneToMany(cascade=CascadeType.ALL, fetch=FetchType.LAZY, mappedBy="documents")
    public Set<TaskComment> getTaskComments() {
        return this.taskComments;
    }
    
    public void setTaskComments(Set<TaskComment> taskComments) {
        this.taskComments = taskComments;
    }
@OneToMany(cascade=CascadeType.ALL, fetch=FetchType.LAZY, mappedBy="documents")
    public Set<Users> getUserses() {
        return this.userses;
    }
    
    public void setUserses(Set<Users> userses) {
        this.userses = userses;
    }




}


