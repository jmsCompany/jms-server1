package com.jms.domain.db;
// Generated 2015-12-31 19:48:00 by Hibernate Tools 3.2.2.GA


import java.util.HashSet;
import java.util.Set;
import javax.persistence.CascadeType;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import static javax.persistence.GenerationType.IDENTITY;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;

/**
 * SMaterialCategory generated by hbm2java
 */
@Entity
@Table(name="s_material_category"
    ,catalog="jms3"
)
public class SMaterialCategory  implements java.io.Serializable {


     private Long id;
     private Company company;
     private SStatusDic SStatusDic;
     private SMaterialCategory SMaterialCategory;
     private String name;
     private String des;
     private Long orderBy;
     private Set<SMaterialCategoryPic> SMaterialCategoryPics = new HashSet<SMaterialCategoryPic>(0);
     private Set<SMaterialCategory> SMaterialCategories = new HashSet<SMaterialCategory>(0);
     private Set<SMaterial> SMaterials = new HashSet<SMaterial>(0);

    public SMaterialCategory() {
    }

    public SMaterialCategory(Company company, SStatusDic SStatusDic, SMaterialCategory SMaterialCategory, String name, String des, Long orderBy, Set<SMaterialCategoryPic> SMaterialCategoryPics, Set<SMaterialCategory> SMaterialCategories, Set<SMaterial> SMaterials) {
       this.company = company;
       this.SStatusDic = SStatusDic;
       this.SMaterialCategory = SMaterialCategory;
       this.name = name;
       this.des = des;
       this.orderBy = orderBy;
       this.SMaterialCategoryPics = SMaterialCategoryPics;
       this.SMaterialCategories = SMaterialCategories;
       this.SMaterials = SMaterials;
    }
   
     @Id @GeneratedValue(strategy=IDENTITY)
    
    @Column(name="id", unique=true, nullable=false)
    public Long getId() {
        return this.id;
    }
    
    public void setId(Long id) {
        this.id = id;
    }
@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="id_company")
    public Company getCompany() {
        return this.company;
    }
    
    public void setCompany(Company company) {
        this.company = company;
    }
@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="status")
    public SStatusDic getSStatusDic() {
        return this.SStatusDic;
    }
    
    public void setSStatusDic(SStatusDic SStatusDic) {
        this.SStatusDic = SStatusDic;
    }
@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="parent")
    public SMaterialCategory getSMaterialCategory() {
        return this.SMaterialCategory;
    }
    
    public void setSMaterialCategory(SMaterialCategory SMaterialCategory) {
        this.SMaterialCategory = SMaterialCategory;
    }
    
    @Column(name="name", length=128)
    public String getName() {
        return this.name;
    }
    
    public void setName(String name) {
        this.name = name;
    }
    
    @Column(name="des", length=1024)
    public String getDes() {
        return this.des;
    }
    
    public void setDes(String des) {
        this.des = des;
    }
    
    @Column(name="order_by")
    public Long getOrderBy() {
        return this.orderBy;
    }
    
    public void setOrderBy(Long orderBy) {
        this.orderBy = orderBy;
    }
@OneToMany(cascade=CascadeType.ALL, fetch=FetchType.LAZY, mappedBy="SMaterialCategory")
    public Set<SMaterialCategoryPic> getSMaterialCategoryPics() {
        return this.SMaterialCategoryPics;
    }
    
    public void setSMaterialCategoryPics(Set<SMaterialCategoryPic> SMaterialCategoryPics) {
        this.SMaterialCategoryPics = SMaterialCategoryPics;
    }
@OneToMany(cascade=CascadeType.ALL, fetch=FetchType.LAZY, mappedBy="SMaterialCategory")
    public Set<SMaterialCategory> getSMaterialCategories() {
        return this.SMaterialCategories;
    }
    
    public void setSMaterialCategories(Set<SMaterialCategory> SMaterialCategories) {
        this.SMaterialCategories = SMaterialCategories;
    }
@OneToMany(cascade=CascadeType.ALL, fetch=FetchType.LAZY, mappedBy="SMaterialCategory")
    public Set<SMaterial> getSMaterials() {
        return this.SMaterials;
    }
    
    public void setSMaterials(Set<SMaterial> SMaterials) {
        this.SMaterials = SMaterials;
    }




}


