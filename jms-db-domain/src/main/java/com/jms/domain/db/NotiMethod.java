package com.jms.domain.db;
// Generated 2015-6-29 13:44:42 by Hibernate Tools 3.2.2.GA


import static javax.persistence.GenerationType.IDENTITY;

import java.util.HashSet;
import java.util.Set;

import javax.persistence.CascadeType;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.Id;
import javax.persistence.OneToMany;
import javax.persistence.Table;

import org.hibernate.envers.AuditTable;
import org.hibernate.envers.Audited;

/**
 * NotiMethod generated by hbm2java
 */
@Audited
@AuditTable(catalog="jms_aud", value = "noti_method_AUD")
@Entity
@Table(name="noti_method"
    ,catalog="jms"
)
public class NotiMethod  implements java.io.Serializable {


     private Long idNotiMethod;
     private String method;
     private Set<Notification> notifications = new HashSet<Notification>(0);

    public NotiMethod() {
    }

	
    public NotiMethod(Long idNotiMethod) {
        this.idNotiMethod = idNotiMethod;
    }
    public NotiMethod(Long idNotiMethod, String method, Set<Notification> notifications) {
       this.idNotiMethod = idNotiMethod;
       this.method = method;
       this.notifications = notifications;
    }
   
     @Id @GeneratedValue(strategy=IDENTITY)
    
    @Column(name="ID_NOTI_METHOD", unique=true, nullable=false)
    public Long getIdNotiMethod() {
        return this.idNotiMethod;
    }
    
    public void setIdNotiMethod(Long idNotiMethod) {
        this.idNotiMethod = idNotiMethod;
    }
    
    @Column(name="METHOD", length=20)
    public String getMethod() {
        return this.method;
    }
    
    public void setMethod(String method) {
        this.method = method;
    }
@OneToMany(cascade=CascadeType.ALL, fetch=FetchType.LAZY, mappedBy="notiMethod")
    public Set<Notification> getNotifications() {
        return this.notifications;
    }
    
    public void setNotifications(Set<Notification> notifications) {
        this.notifications = notifications;
    }




}


