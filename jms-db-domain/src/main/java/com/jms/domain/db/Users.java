package com.jms.domain.db;
// Generated 2016-1-6 12:39:14 by Hibernate Tools 3.2.2.GA


import java.util.Date;
import java.util.HashSet;
import java.util.Set;
import javax.persistence.CascadeType;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import static javax.persistence.GenerationType.IDENTITY;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

/**
 * Users generated by hbm2java
 */
@Entity
@Table(name="users"
    ,catalog="jms3"
)
public class Users  implements java.io.Serializable {


     private Long idUser;
     private SysDicD sysDicDByLocale;
     private SysDicD sysDicDByStatus;
     private Company company;
     private District district;
     private Document documentByPic;
     private SysDicD sysDicDByScheme;
     private SysDicD sysDicDByGender;
     private Users users;
     private Document documentByCv;
     private Date creationTime;
     private String username;
     private String mobile;
     private String email;
     private String password;
     private String idcard;
     private String name;
     private String address;
     private String ext;
     private String ENo;
     private String school;
     private Date gradTime;
     private String major;
     private String degree;
     private String emergencyHp;
     private Long enabled;
     private String description;
     private Date birthday;
     private Date lastLogin;
     private String token;
     private Long userType;
     private Set<WProject> WProjects = new HashSet<WProject>(0);
     private Set<Document> documentsForModifyBy = new HashSet<Document>(0);
     private Set<Document> documentsForCreator = new HashSet<Document>(0);
     private Set<Notice> notices = new HashSet<Notice>(0);
     private Set<SCompanyCo> SCompanyCos = new HashSet<SCompanyCo>(0);
     private Set<SPo> SPos = new HashSet<SPo>(0);
     private Set<SSo> SSos = new HashSet<SSo>(0);
     private Set<SAttachment> SAttachments = new HashSet<SAttachment>(0);
     private Set<GroupMembers> groupMemberses = new HashSet<GroupMembers>(0);
     private Set<Groups> groupses = new HashSet<Groups>(0);
     private Set<PPollParticipant> PPollParticipants = new HashSet<PPollParticipant>(0);
     private Set<WIssueComment> WIssueComments = new HashSet<WIssueComment>(0);
     private Set<AApprovalPhase> AApprovalPhases = new HashSet<AApprovalPhase>(0);
     private Set<Users> userses = new HashSet<Users>(0);
     private Set<WProjectParticipant> WProjectParticipants = new HashSet<WProjectParticipant>(0);
     private Set<WTask> WTasks = new HashSet<WTask>(0);
     private Set<SPic> SPics = new HashSet<SPic>(0);
     private Set<WTaskParticipant> WTaskParticipants = new HashSet<WTaskParticipant>(0);
     private Set<CSchedule> CSchedules = new HashSet<CSchedule>(0);
     private Set<WIssue> WIssues = new HashSet<WIssue>(0);
     private Set<SMtf> SMtfs = new HashSet<SMtf>(0);
     private Set<Feedback> feedbacks = new HashSet<Feedback>(0);
     private Set<AApplication> AApplications = new HashSet<AApplication>(0);
     private Set<Notification> notifications = new HashSet<Notification>(0);
     private Set<CScheduleWatcher> CScheduleWatchers = new HashSet<CScheduleWatcher>(0);
     private Set<SStk> SStks = new HashSet<SStk>(0);
     private Set<WTaskComment> WTaskComments = new HashSet<WTaskComment>(0);
     private Set<AApprovalType> AApprovalTypes = new HashSet<AApprovalType>(0);
     private Set<SMrb> SMrbs = new HashSet<SMrb>(0);
     private Set<AApprovalCc> AApprovalCcs = new HashSet<AApprovalCc>(0);
     private Set<SRma> SRmas = new HashSet<SRma>(0);
     private Set<Company> companiesForCreator = new HashSet<Company>(0);
     private Set<PPoll> PPolls = new HashSet<PPoll>(0);
     private Set<Company> companiesForModifyBy = new HashSet<Company>(0);
     private Set<SDo> SDos = new HashSet<SDo>(0);
     private Set<SIncome> SIncomes = new HashSet<SIncome>(0);

    public Users() {
    }

	
    public Users(String password, Long enabled) {
        this.password = password;
        this.enabled = enabled;
    }
    public Users(SysDicD sysDicDByLocale, SysDicD sysDicDByStatus, Company company, District district, Document documentByPic, SysDicD sysDicDByScheme, SysDicD sysDicDByGender, Users users, Document documentByCv, Date creationTime, String username, String mobile, String email, String password, String idcard, String name, String address, String ext, String ENo, String school, Date gradTime, String major, String degree, String emergencyHp, Long enabled, String description, Date birthday, Date lastLogin, String token, Long userType, Set<WProject> WProjects, Set<Document> documentsForModifyBy, Set<Document> documentsForCreator, Set<Notice> notices, Set<SCompanyCo> SCompanyCos, Set<SPo> SPos, Set<SSo> SSos, Set<SAttachment> SAttachments, Set<GroupMembers> groupMemberses, Set<Groups> groupses, Set<PPollParticipant> PPollParticipants, Set<WIssueComment> WIssueComments, Set<AApprovalPhase> AApprovalPhases, Set<Users> userses, Set<WProjectParticipant> WProjectParticipants, Set<WTask> WTasks, Set<SPic> SPics, Set<WTaskParticipant> WTaskParticipants, Set<CSchedule> CSchedules, Set<WIssue> WIssues, Set<SMtf> SMtfs, Set<Feedback> feedbacks, Set<AApplication> AApplications, Set<Notification> notifications, Set<CScheduleWatcher> CScheduleWatchers, Set<SStk> SStks, Set<WTaskComment> WTaskComments, Set<AApprovalType> AApprovalTypes, Set<SMrb> SMrbs, Set<AApprovalCc> AApprovalCcs, Set<SRma> SRmas, Set<Company> companiesForCreator, Set<PPoll> PPolls, Set<Company> companiesForModifyBy, Set<SDo> SDos, Set<SIncome> SIncomes) {
       this.sysDicDByLocale = sysDicDByLocale;
       this.sysDicDByStatus = sysDicDByStatus;
       this.company = company;
       this.district = district;
       this.documentByPic = documentByPic;
       this.sysDicDByScheme = sysDicDByScheme;
       this.sysDicDByGender = sysDicDByGender;
       this.users = users;
       this.documentByCv = documentByCv;
       this.creationTime = creationTime;
       this.username = username;
       this.mobile = mobile;
       this.email = email;
       this.password = password;
       this.idcard = idcard;
       this.name = name;
       this.address = address;
       this.ext = ext;
       this.ENo = ENo;
       this.school = school;
       this.gradTime = gradTime;
       this.major = major;
       this.degree = degree;
       this.emergencyHp = emergencyHp;
       this.enabled = enabled;
       this.description = description;
       this.birthday = birthday;
       this.lastLogin = lastLogin;
       this.token = token;
       this.userType = userType;
       this.WProjects = WProjects;
       this.documentsForModifyBy = documentsForModifyBy;
       this.documentsForCreator = documentsForCreator;
       this.notices = notices;
       this.SCompanyCos = SCompanyCos;
       this.SPos = SPos;
       this.SSos = SSos;
       this.SAttachments = SAttachments;
       this.groupMemberses = groupMemberses;
       this.groupses = groupses;
       this.PPollParticipants = PPollParticipants;
       this.WIssueComments = WIssueComments;
       this.AApprovalPhases = AApprovalPhases;
       this.userses = userses;
       this.WProjectParticipants = WProjectParticipants;
       this.WTasks = WTasks;
       this.SPics = SPics;
       this.WTaskParticipants = WTaskParticipants;
       this.CSchedules = CSchedules;
       this.WIssues = WIssues;
       this.SMtfs = SMtfs;
       this.feedbacks = feedbacks;
       this.AApplications = AApplications;
       this.notifications = notifications;
       this.CScheduleWatchers = CScheduleWatchers;
       this.SStks = SStks;
       this.WTaskComments = WTaskComments;
       this.AApprovalTypes = AApprovalTypes;
       this.SMrbs = SMrbs;
       this.AApprovalCcs = AApprovalCcs;
       this.SRmas = SRmas;
       this.companiesForCreator = companiesForCreator;
       this.PPolls = PPolls;
       this.companiesForModifyBy = companiesForModifyBy;
       this.SDos = SDos;
       this.SIncomes = SIncomes;
    }
   
     @Id @GeneratedValue(strategy=IDENTITY)
    
    @Column(name="id_user", unique=true, nullable=false)
    public Long getIdUser() {
        return this.idUser;
    }
    
    public void setIdUser(Long idUser) {
        this.idUser = idUser;
    }
@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="locale")
    public SysDicD getSysDicDByLocale() {
        return this.sysDicDByLocale;
    }
    
    public void setSysDicDByLocale(SysDicD sysDicDByLocale) {
        this.sysDicDByLocale = sysDicDByLocale;
    }
@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="status")
    public SysDicD getSysDicDByStatus() {
        return this.sysDicDByStatus;
    }
    
    public void setSysDicDByStatus(SysDicD sysDicDByStatus) {
        this.sysDicDByStatus = sysDicDByStatus;
    }
@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="id_company")
    public Company getCompany() {
        return this.company;
    }
    
    public void setCompany(Company company) {
        this.company = company;
    }
@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="id_district")
    public District getDistrict() {
        return this.district;
    }
    
    public void setDistrict(District district) {
        this.district = district;
    }
@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="pic")
    public Document getDocumentByPic() {
        return this.documentByPic;
    }
    
    public void setDocumentByPic(Document documentByPic) {
        this.documentByPic = documentByPic;
    }
@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="scheme")
    public SysDicD getSysDicDByScheme() {
        return this.sysDicDByScheme;
    }
    
    public void setSysDicDByScheme(SysDicD sysDicDByScheme) {
        this.sysDicDByScheme = sysDicDByScheme;
    }
@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="gender")
    public SysDicD getSysDicDByGender() {
        return this.sysDicDByGender;
    }
    
    public void setSysDicDByGender(SysDicD sysDicDByGender) {
        this.sysDicDByGender = sysDicDByGender;
    }
@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="creator")
    public Users getUsers() {
        return this.users;
    }
    
    public void setUsers(Users users) {
        this.users = users;
    }
@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="cv")
    public Document getDocumentByCv() {
        return this.documentByCv;
    }
    
    public void setDocumentByCv(Document documentByCv) {
        this.documentByCv = documentByCv;
    }
    @Temporal(TemporalType.DATE)
    @Column(name="creation_time", length=10)
    public Date getCreationTime() {
        return this.creationTime;
    }
    
    public void setCreationTime(Date creationTime) {
        this.creationTime = creationTime;
    }
    
    @Column(name="username", length=64)
    public String getUsername() {
        return this.username;
    }
    
    public void setUsername(String username) {
        this.username = username;
    }
    
    @Column(name="mobile", length=64)
    public String getMobile() {
        return this.mobile;
    }
    
    public void setMobile(String mobile) {
        this.mobile = mobile;
    }
    
    @Column(name="email", length=64)
    public String getEmail() {
        return this.email;
    }
    
    public void setEmail(String email) {
        this.email = email;
    }
    
    @Column(name="password", nullable=false, length=64)
    public String getPassword() {
        return this.password;
    }
    
    public void setPassword(String password) {
        this.password = password;
    }
    
    @Column(name="idcard", length=18)
    public String getIdcard() {
        return this.idcard;
    }
    
    public void setIdcard(String idcard) {
        this.idcard = idcard;
    }
    
    @Column(name="name", length=64)
    public String getName() {
        return this.name;
    }
    
    public void setName(String name) {
        this.name = name;
    }
    
    @Column(name="address", length=128)
    public String getAddress() {
        return this.address;
    }
    
    public void setAddress(String address) {
        this.address = address;
    }
    
    @Column(name="ext", length=20)
    public String getExt() {
        return this.ext;
    }
    
    public void setExt(String ext) {
        this.ext = ext;
    }
    
    @Column(name="e_no", length=20)
    public String getENo() {
        return this.ENo;
    }
    
    public void setENo(String ENo) {
        this.ENo = ENo;
    }
    
    @Column(name="school", length=128)
    public String getSchool() {
        return this.school;
    }
    
    public void setSchool(String school) {
        this.school = school;
    }
    @Temporal(TemporalType.DATE)
    @Column(name="grad_time", length=10)
    public Date getGradTime() {
        return this.gradTime;
    }
    
    public void setGradTime(Date gradTime) {
        this.gradTime = gradTime;
    }
    
    @Column(name="major", length=64)
    public String getMajor() {
        return this.major;
    }
    
    public void setMajor(String major) {
        this.major = major;
    }
    
    @Column(name="degree", length=64)
    public String getDegree() {
        return this.degree;
    }
    
    public void setDegree(String degree) {
        this.degree = degree;
    }
    
    @Column(name="emergency_hp", length=64)
    public String getEmergencyHp() {
        return this.emergencyHp;
    }
    
    public void setEmergencyHp(String emergencyHp) {
        this.emergencyHp = emergencyHp;
    }
    
    @Column(name="enabled", nullable=false)
    public Long getEnabled() {
        return this.enabled;
    }
    
    public void setEnabled(Long enabled) {
        this.enabled = enabled;
    }
    
    @Column(name="description", length=256)
    public String getDescription() {
        return this.description;
    }
    
    public void setDescription(String description) {
        this.description = description;
    }
    @Temporal(TemporalType.DATE)
    @Column(name="birthday", length=10)
    public Date getBirthday() {
        return this.birthday;
    }
    
    public void setBirthday(Date birthday) {
        this.birthday = birthday;
    }
    @Temporal(TemporalType.TIMESTAMP)
    @Column(name="last_login", length=19)
    public Date getLastLogin() {
        return this.lastLogin;
    }
    
    public void setLastLogin(Date lastLogin) {
        this.lastLogin = lastLogin;
    }
    
    @Column(name="token", length=128)
    public String getToken() {
        return this.token;
    }
    
    public void setToken(String token) {
        this.token = token;
    }
    
    @Column(name="user_type")
    public Long getUserType() {
        return this.userType;
    }
    
    public void setUserType(Long userType) {
        this.userType = userType;
    }
@OneToMany(cascade=CascadeType.ALL, fetch=FetchType.LAZY, mappedBy="users")
    public Set<WProject> getWProjects() {
        return this.WProjects;
    }
    
    public void setWProjects(Set<WProject> WProjects) {
        this.WProjects = WProjects;
    }
@OneToMany(cascade=CascadeType.ALL, fetch=FetchType.LAZY, mappedBy="usersByModifyBy")
    public Set<Document> getDocumentsForModifyBy() {
        return this.documentsForModifyBy;
    }
    
    public void setDocumentsForModifyBy(Set<Document> documentsForModifyBy) {
        this.documentsForModifyBy = documentsForModifyBy;
    }
@OneToMany(cascade=CascadeType.ALL, fetch=FetchType.LAZY, mappedBy="usersByCreator")
    public Set<Document> getDocumentsForCreator() {
        return this.documentsForCreator;
    }
    
    public void setDocumentsForCreator(Set<Document> documentsForCreator) {
        this.documentsForCreator = documentsForCreator;
    }
@OneToMany(cascade=CascadeType.ALL, fetch=FetchType.LAZY, mappedBy="users")
    public Set<Notice> getNotices() {
        return this.notices;
    }
    
    public void setNotices(Set<Notice> notices) {
        this.notices = notices;
    }
@OneToMany(cascade=CascadeType.ALL, fetch=FetchType.LAZY, mappedBy="users")
    public Set<SCompanyCo> getSCompanyCos() {
        return this.SCompanyCos;
    }
    
    public void setSCompanyCos(Set<SCompanyCo> SCompanyCos) {
        this.SCompanyCos = SCompanyCos;
    }
@OneToMany(cascade=CascadeType.ALL, fetch=FetchType.LAZY, mappedBy="users")
    public Set<SPo> getSPos() {
        return this.SPos;
    }
    
    public void setSPos(Set<SPo> SPos) {
        this.SPos = SPos;
    }
@OneToMany(cascade=CascadeType.ALL, fetch=FetchType.LAZY, mappedBy="users")
    public Set<SSo> getSSos() {
        return this.SSos;
    }
    
    public void setSSos(Set<SSo> SSos) {
        this.SSos = SSos;
    }
@OneToMany(cascade=CascadeType.ALL, fetch=FetchType.LAZY, mappedBy="users")
    public Set<SAttachment> getSAttachments() {
        return this.SAttachments;
    }
    
    public void setSAttachments(Set<SAttachment> SAttachments) {
        this.SAttachments = SAttachments;
    }
@OneToMany(cascade=CascadeType.ALL, fetch=FetchType.LAZY, mappedBy="users")
    public Set<GroupMembers> getGroupMemberses() {
        return this.groupMemberses;
    }
    
    public void setGroupMemberses(Set<GroupMembers> groupMemberses) {
        this.groupMemberses = groupMemberses;
    }
@OneToMany(cascade=CascadeType.ALL, fetch=FetchType.LAZY, mappedBy="users")
    public Set<Groups> getGroupses() {
        return this.groupses;
    }
    
    public void setGroupses(Set<Groups> groupses) {
        this.groupses = groupses;
    }
@OneToMany(cascade=CascadeType.ALL, fetch=FetchType.LAZY, mappedBy="users")
    public Set<PPollParticipant> getPPollParticipants() {
        return this.PPollParticipants;
    }
    
    public void setPPollParticipants(Set<PPollParticipant> PPollParticipants) {
        this.PPollParticipants = PPollParticipants;
    }
@OneToMany(cascade=CascadeType.ALL, fetch=FetchType.LAZY, mappedBy="users")
    public Set<WIssueComment> getWIssueComments() {
        return this.WIssueComments;
    }
    
    public void setWIssueComments(Set<WIssueComment> WIssueComments) {
        this.WIssueComments = WIssueComments;
    }
@OneToMany(cascade=CascadeType.ALL, fetch=FetchType.LAZY, mappedBy="users")
    public Set<AApprovalPhase> getAApprovalPhases() {
        return this.AApprovalPhases;
    }
    
    public void setAApprovalPhases(Set<AApprovalPhase> AApprovalPhases) {
        this.AApprovalPhases = AApprovalPhases;
    }
@OneToMany(cascade=CascadeType.ALL, fetch=FetchType.LAZY, mappedBy="users")
    public Set<Users> getUserses() {
        return this.userses;
    }
    
    public void setUserses(Set<Users> userses) {
        this.userses = userses;
    }
@OneToMany(cascade=CascadeType.ALL, fetch=FetchType.LAZY, mappedBy="users")
    public Set<WProjectParticipant> getWProjectParticipants() {
        return this.WProjectParticipants;
    }
    
    public void setWProjectParticipants(Set<WProjectParticipant> WProjectParticipants) {
        this.WProjectParticipants = WProjectParticipants;
    }
@OneToMany(cascade=CascadeType.ALL, fetch=FetchType.LAZY, mappedBy="users")
    public Set<WTask> getWTasks() {
        return this.WTasks;
    }
    
    public void setWTasks(Set<WTask> WTasks) {
        this.WTasks = WTasks;
    }
@OneToMany(cascade=CascadeType.ALL, fetch=FetchType.LAZY, mappedBy="users")
    public Set<SPic> getSPics() {
        return this.SPics;
    }
    
    public void setSPics(Set<SPic> SPics) {
        this.SPics = SPics;
    }
@OneToMany(cascade=CascadeType.ALL, fetch=FetchType.LAZY, mappedBy="users")
    public Set<WTaskParticipant> getWTaskParticipants() {
        return this.WTaskParticipants;
    }
    
    public void setWTaskParticipants(Set<WTaskParticipant> WTaskParticipants) {
        this.WTaskParticipants = WTaskParticipants;
    }
@OneToMany(cascade=CascadeType.ALL, fetch=FetchType.LAZY, mappedBy="users")
    public Set<CSchedule> getCSchedules() {
        return this.CSchedules;
    }
    
    public void setCSchedules(Set<CSchedule> CSchedules) {
        this.CSchedules = CSchedules;
    }
@OneToMany(cascade=CascadeType.ALL, fetch=FetchType.LAZY, mappedBy="users")
    public Set<WIssue> getWIssues() {
        return this.WIssues;
    }
    
    public void setWIssues(Set<WIssue> WIssues) {
        this.WIssues = WIssues;
    }
@OneToMany(cascade=CascadeType.ALL, fetch=FetchType.LAZY, mappedBy="users")
    public Set<SMtf> getSMtfs() {
        return this.SMtfs;
    }
    
    public void setSMtfs(Set<SMtf> SMtfs) {
        this.SMtfs = SMtfs;
    }
@OneToMany(cascade=CascadeType.ALL, fetch=FetchType.LAZY, mappedBy="users")
    public Set<Feedback> getFeedbacks() {
        return this.feedbacks;
    }
    
    public void setFeedbacks(Set<Feedback> feedbacks) {
        this.feedbacks = feedbacks;
    }
@OneToMany(cascade=CascadeType.ALL, fetch=FetchType.LAZY, mappedBy="users")
    public Set<AApplication> getAApplications() {
        return this.AApplications;
    }
    
    public void setAApplications(Set<AApplication> AApplications) {
        this.AApplications = AApplications;
    }
@OneToMany(cascade=CascadeType.ALL, fetch=FetchType.LAZY, mappedBy="users")
    public Set<Notification> getNotifications() {
        return this.notifications;
    }
    
    public void setNotifications(Set<Notification> notifications) {
        this.notifications = notifications;
    }
@OneToMany(cascade=CascadeType.ALL, fetch=FetchType.LAZY, mappedBy="users")
    public Set<CScheduleWatcher> getCScheduleWatchers() {
        return this.CScheduleWatchers;
    }
    
    public void setCScheduleWatchers(Set<CScheduleWatcher> CScheduleWatchers) {
        this.CScheduleWatchers = CScheduleWatchers;
    }
@OneToMany(cascade=CascadeType.ALL, fetch=FetchType.LAZY, mappedBy="users")
    public Set<SStk> getSStks() {
        return this.SStks;
    }
    
    public void setSStks(Set<SStk> SStks) {
        this.SStks = SStks;
    }
@OneToMany(cascade=CascadeType.ALL, fetch=FetchType.LAZY, mappedBy="users")
    public Set<WTaskComment> getWTaskComments() {
        return this.WTaskComments;
    }
    
    public void setWTaskComments(Set<WTaskComment> WTaskComments) {
        this.WTaskComments = WTaskComments;
    }
@OneToMany(cascade=CascadeType.ALL, fetch=FetchType.LAZY, mappedBy="users")
    public Set<AApprovalType> getAApprovalTypes() {
        return this.AApprovalTypes;
    }
    
    public void setAApprovalTypes(Set<AApprovalType> AApprovalTypes) {
        this.AApprovalTypes = AApprovalTypes;
    }
@OneToMany(cascade=CascadeType.ALL, fetch=FetchType.LAZY, mappedBy="users")
    public Set<SMrb> getSMrbs() {
        return this.SMrbs;
    }
    
    public void setSMrbs(Set<SMrb> SMrbs) {
        this.SMrbs = SMrbs;
    }
@OneToMany(cascade=CascadeType.ALL, fetch=FetchType.LAZY, mappedBy="users")
    public Set<AApprovalCc> getAApprovalCcs() {
        return this.AApprovalCcs;
    }
    
    public void setAApprovalCcs(Set<AApprovalCc> AApprovalCcs) {
        this.AApprovalCcs = AApprovalCcs;
    }
@OneToMany(cascade=CascadeType.ALL, fetch=FetchType.LAZY, mappedBy="users")
    public Set<SRma> getSRmas() {
        return this.SRmas;
    }
    
    public void setSRmas(Set<SRma> SRmas) {
        this.SRmas = SRmas;
    }
@OneToMany(cascade=CascadeType.ALL, fetch=FetchType.LAZY, mappedBy="usersByCreator")
    public Set<Company> getCompaniesForCreator() {
        return this.companiesForCreator;
    }
    
    public void setCompaniesForCreator(Set<Company> companiesForCreator) {
        this.companiesForCreator = companiesForCreator;
    }
@OneToMany(cascade=CascadeType.ALL, fetch=FetchType.LAZY, mappedBy="users")
    public Set<PPoll> getPPolls() {
        return this.PPolls;
    }
    
    public void setPPolls(Set<PPoll> PPolls) {
        this.PPolls = PPolls;
    }
@OneToMany(cascade=CascadeType.ALL, fetch=FetchType.LAZY, mappedBy="usersByModifyBy")
    public Set<Company> getCompaniesForModifyBy() {
        return this.companiesForModifyBy;
    }
    
    public void setCompaniesForModifyBy(Set<Company> companiesForModifyBy) {
        this.companiesForModifyBy = companiesForModifyBy;
    }
@OneToMany(cascade=CascadeType.ALL, fetch=FetchType.LAZY, mappedBy="users")
    public Set<SDo> getSDos() {
        return this.SDos;
    }
    
    public void setSDos(Set<SDo> SDos) {
        this.SDos = SDos;
    }
@OneToMany(cascade=CascadeType.ALL, fetch=FetchType.LAZY, mappedBy="users")
    public Set<SIncome> getSIncomes() {
        return this.SIncomes;
    }
    
    public void setSIncomes(Set<SIncome> SIncomes) {
        this.SIncomes = SIncomes;
    }




}


