package com.jms.domain.db;
// Generated 2015-5-31 12:27:01 by Hibernate Tools 3.2.2.GA


import java.util.Date;
import java.util.HashSet;
import java.util.Set;
import javax.persistence.CascadeType;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import static javax.persistence.GenerationType.IDENTITY;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToMany;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

/**
 * Users generated by hbm2java
 */
@Entity
@Table(name="users"
    ,catalog="jms"
)
public class Users  implements java.io.Serializable {


     private Integer idUser;
     private Company company;
     private Documents documents;
     private String username;
     private String mobile;
     private String email;
     private String password;
     private String name;
     private String address;
     private String idcard;
     private Date creationTime;
     private int enabled;
     private String locale;
     private Set<Roles> roleses = new HashSet<Roles>(0);
     private Set<Company> companies = new HashSet<Company>(0);
     private Set<Trace> traces = new HashSet<Trace>(0);
     private Set<PersistentLogin> persistentLogins = new HashSet<PersistentLogin>(0);
     private Set<SectorMember> sectorMembers = new HashSet<SectorMember>(0);
     private Set<Task> tasksForCreator = new HashSet<Task>(0);
     private Set<ProjectParticipant> projectParticipants = new HashSet<ProjectParticipant>(0);
     private Set<Task> tasksForCreator_1 = new HashSet<Task>(0);
     private Set<TaskComment> taskComments = new HashSet<TaskComment>(0);
     private Set<GroupMembers> groupMemberses = new HashSet<GroupMembers>(0);
     private Set<Groups> groupses = new HashSet<Groups>(0);
     private Set<Task> tasksForAssignee = new HashSet<Task>(0);

    public Users() {
    }

	
    public Users(String password, int enabled, String locale) {
        this.password = password;
        this.enabled = enabled;
        this.locale = locale;
    }
    public Users(Company company, Documents documents, String username, String mobile, String email, String password, String name, String address, String idcard, Date creationTime, int enabled, String locale, Set<Roles> roleses, Set<Company> companies, Set<Trace> traces, Set<PersistentLogin> persistentLogins, Set<SectorMember> sectorMembers, Set<Task> tasksForCreator, Set<ProjectParticipant> projectParticipants, Set<Task> tasksForCreator_1, Set<TaskComment> taskComments, Set<GroupMembers> groupMemberses, Set<Groups> groupses, Set<Task> tasksForAssignee) {
       this.company = company;
       this.documents = documents;
       this.username = username;
       this.mobile = mobile;
       this.email = email;
       this.password = password;
       this.name = name;
       this.address = address;
       this.idcard = idcard;
       this.creationTime = creationTime;
       this.enabled = enabled;
       this.locale = locale;
       this.roleses = roleses;
       this.companies = companies;
       this.traces = traces;
       this.persistentLogins = persistentLogins;
       this.sectorMembers = sectorMembers;
       this.tasksForCreator = tasksForCreator;
       this.projectParticipants = projectParticipants;
       this.tasksForCreator_1 = tasksForCreator_1;
       this.taskComments = taskComments;
       this.groupMemberses = groupMemberses;
       this.groupses = groupses;
       this.tasksForAssignee = tasksForAssignee;
    }
   
     @Id @GeneratedValue(strategy=IDENTITY)
    
    @Column(name="ID_USER", unique=true, nullable=false)
    public Integer getIdUser() {
        return this.idUser;
    }
    
    public void setIdUser(Integer idUser) {
        this.idUser = idUser;
    }
@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="ID_COMPANY")
    public Company getCompany() {
        return this.company;
    }
    
    public void setCompany(Company company) {
        this.company = company;
    }
@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="CV")
    public Documents getDocuments() {
        return this.documents;
    }
    
    public void setDocuments(Documents documents) {
        this.documents = documents;
    }
    
    @Column(name="USERNAME", length=64)
    public String getUsername() {
        return this.username;
    }
    
    public void setUsername(String username) {
        this.username = username;
    }
    
    @Column(name="MOBILE", length=64)
    public String getMobile() {
        return this.mobile;
    }
    
    public void setMobile(String mobile) {
        this.mobile = mobile;
    }
    
    @Column(name="EMAIL", length=64)
    public String getEmail() {
        return this.email;
    }
    
    public void setEmail(String email) {
        this.email = email;
    }
    
    @Column(name="PASSWORD", nullable=false, length=64)
    public String getPassword() {
        return this.password;
    }
    
    public void setPassword(String password) {
        this.password = password;
    }
    
    @Column(name="NAME", length=64)
    public String getName() {
        return this.name;
    }
    
    public void setName(String name) {
        this.name = name;
    }
    
    @Column(name="ADDRESS", length=128)
    public String getAddress() {
        return this.address;
    }
    
    public void setAddress(String address) {
        this.address = address;
    }
    
    @Column(name="IDCARD", length=18)
    public String getIdcard() {
        return this.idcard;
    }
    
    public void setIdcard(String idcard) {
        this.idcard = idcard;
    }
    @Temporal(TemporalType.DATE)
    @Column(name="CREATION_TIME", length=10)
    public Date getCreationTime() {
        return this.creationTime;
    }
    
    public void setCreationTime(Date creationTime) {
        this.creationTime = creationTime;
    }
    
    @Column(name="ENABLED", nullable=false)
    public int getEnabled() {
        return this.enabled;
    }
    
    public void setEnabled(int enabled) {
        this.enabled = enabled;
    }
    
    @Column(name="LOCALE", nullable=false, length=20)
    public String getLocale() {
        return this.locale;
    }
    
    public void setLocale(String locale) {
        this.locale = locale;
    }
@ManyToMany(cascade=CascadeType.ALL, fetch=FetchType.LAZY, mappedBy="userses")
    public Set<Roles> getRoleses() {
        return this.roleses;
    }
    
    public void setRoleses(Set<Roles> roleses) {
        this.roleses = roleses;
    }
@OneToMany(cascade=CascadeType.ALL, fetch=FetchType.LAZY, mappedBy="users")
    public Set<Company> getCompanies() {
        return this.companies;
    }
    
    public void setCompanies(Set<Company> companies) {
        this.companies = companies;
    }
@OneToMany(cascade=CascadeType.ALL, fetch=FetchType.LAZY, mappedBy="users")
    public Set<Trace> getTraces() {
        return this.traces;
    }
    
    public void setTraces(Set<Trace> traces) {
        this.traces = traces;
    }
@OneToMany(cascade=CascadeType.ALL, fetch=FetchType.LAZY, mappedBy="users")
    public Set<PersistentLogin> getPersistentLogins() {
        return this.persistentLogins;
    }
    
    public void setPersistentLogins(Set<PersistentLogin> persistentLogins) {
        this.persistentLogins = persistentLogins;
    }
@OneToMany(cascade=CascadeType.ALL, fetch=FetchType.LAZY, mappedBy="users")
    public Set<SectorMember> getSectorMembers() {
        return this.sectorMembers;
    }
    
    public void setSectorMembers(Set<SectorMember> sectorMembers) {
        this.sectorMembers = sectorMembers;
    }
@OneToMany(cascade=CascadeType.ALL, fetch=FetchType.LAZY, mappedBy="usersByCreator")
    public Set<Task> getTasksForCreator() {
        return this.tasksForCreator;
    }
    
    public void setTasksForCreator(Set<Task> tasksForCreator) {
        this.tasksForCreator = tasksForCreator;
    }
@OneToMany(cascade=CascadeType.ALL, fetch=FetchType.LAZY, mappedBy="users")
    public Set<ProjectParticipant> getProjectParticipants() {
        return this.projectParticipants;
    }
    
    public void setProjectParticipants(Set<ProjectParticipant> projectParticipants) {
        this.projectParticipants = projectParticipants;
    }
@OneToMany(cascade=CascadeType.ALL, fetch=FetchType.LAZY, mappedBy="usersByCreator")
    public Set<Task> getTasksForCreator_1() {
        return this.tasksForCreator_1;
    }
    
    public void setTasksForCreator_1(Set<Task> tasksForCreator_1) {
        this.tasksForCreator_1 = tasksForCreator_1;
    }
@OneToMany(cascade=CascadeType.ALL, fetch=FetchType.LAZY, mappedBy="users")
    public Set<TaskComment> getTaskComments() {
        return this.taskComments;
    }
    
    public void setTaskComments(Set<TaskComment> taskComments) {
        this.taskComments = taskComments;
    }
@OneToMany(cascade=CascadeType.ALL, fetch=FetchType.LAZY, mappedBy="users")
    public Set<GroupMembers> getGroupMemberses() {
        return this.groupMemberses;
    }
    
    public void setGroupMemberses(Set<GroupMembers> groupMemberses) {
        this.groupMemberses = groupMemberses;
    }
@OneToMany(cascade=CascadeType.ALL, fetch=FetchType.LAZY, mappedBy="users")
    public Set<Groups> getGroupses() {
        return this.groupses;
    }
    
    public void setGroupses(Set<Groups> groupses) {
        this.groupses = groupses;
    }
@OneToMany(cascade=CascadeType.ALL, fetch=FetchType.LAZY, mappedBy="usersByAssignee")
    public Set<Task> getTasksForAssignee() {
        return this.tasksForAssignee;
    }
    
    public void setTasksForAssignee(Set<Task> tasksForAssignee) {
        this.tasksForAssignee = tasksForAssignee;
    }




}


