package com.jms.domain.db;
// Generated 2015-5-30 22:39:13 by Hibernate Tools 3.2.2.GA


import java.util.Date;
import java.util.HashSet;
import java.util.Set;

import javax.persistence.CascadeType;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;

import static javax.persistence.GenerationType.IDENTITY;

import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

/**
 * Company generated by hbm2java
 */
@Entity
@Table(name="company"
    ,catalog="jms"
)
public class Company  implements java.io.Serializable {


     private Integer idCompany;
     private Users users;
     private String companyName;
     private String description;
     private Date creationTime;
     private int fineTask;
     private int enabled;
     private Float usedSpace;
     private Set<Users> userses = new HashSet<Users>(0);
     private Set<Project> projects = new HashSet<Project>(0);
     private Set<Sector> sectors = new HashSet<Sector>(0);
     private Set<Roles> roleses = new HashSet<Roles>(0);

    public Company() {
    }

	
    public Company(Users users, String companyName, Date creationTime, int fineTask, int enabled) {
        this.users = users;
        this.companyName = companyName;
        this.creationTime = creationTime;
        this.fineTask = fineTask;
        this.enabled = enabled;
    }
    public Company(Users users, String companyName, String description, Date creationTime, int fineTask, int enabled, Float usedSpace, Set<Users> userses, Set<Project> projects, Set<Sector> sectors, Set<Roles> roleses) {
       this.users = users;
       this.companyName = companyName;
       this.description = description;
       this.creationTime = creationTime;
       this.fineTask = fineTask;
       this.enabled = enabled;
       this.usedSpace = usedSpace;
       this.userses = userses;
       this.projects = projects;
       this.sectors = sectors;
       this.roleses = roleses;
    }
   
     @Id @GeneratedValue(strategy=GenerationType.AUTO)
    
    @Column(name="ID_COMPANY", unique=true, nullable=false)
    public Integer getIdCompany() {
        return this.idCompany;
    }
    
    public void setIdCompany(Integer idCompany) {
        this.idCompany = idCompany;
    }
@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="CREATOR", nullable=false)
    public Users getUsers() {
        return this.users;
    }
    
    public void setUsers(Users users) {
        this.users = users;
    }
    
    @Column(name="COMPANY_NAME", nullable=false, length=64)
    public String getCompanyName() {
        return this.companyName;
    }
    
    public void setCompanyName(String companyName) {
        this.companyName = companyName;
    }
    
    @Column(name="DESCRIPTION", length=1024)
    public String getDescription() {
        return this.description;
    }
    
    public void setDescription(String description) {
        this.description = description;
    }
    @Temporal(TemporalType.DATE)
    @Column(name="CREATION_TIME", nullable=false, length=10)
    public Date getCreationTime() {
        return this.creationTime;
    }
    
    public void setCreationTime(Date creationTime) {
        this.creationTime = creationTime;
    }
    
    @Column(name="FINE_TASK", nullable=false)
    public int getFineTask() {
        return this.fineTask;
    }
    
    public void setFineTask(int fineTask) {
        this.fineTask = fineTask;
    }
    
    @Column(name="ENABLED", nullable=false)
    public int getEnabled() {
        return this.enabled;
    }
    
    public void setEnabled(int enabled) {
        this.enabled = enabled;
    }
    
    @Column(name="USED_SPACE", precision=12, scale=0)
    public Float getUsedSpace() {
        return this.usedSpace;
    }
    
    public void setUsedSpace(Float usedSpace) {
        this.usedSpace = usedSpace;
    }
@OneToMany(cascade=CascadeType.ALL, fetch=FetchType.LAZY, mappedBy="company")
    public Set<Users> getUserses() {
        return this.userses;
    }
    
    public void setUserses(Set<Users> userses) {
        this.userses = userses;
    }
@OneToMany(cascade=CascadeType.ALL, fetch=FetchType.LAZY, mappedBy="company")
    public Set<Project> getProjects() {
        return this.projects;
    }
    
    public void setProjects(Set<Project> projects) {
        this.projects = projects;
    }
@OneToMany(cascade=CascadeType.ALL, fetch=FetchType.LAZY, mappedBy="company")
    public Set<Sector> getSectors() {
        return this.sectors;
    }
    
    public void setSectors(Set<Sector> sectors) {
        this.sectors = sectors;
    }
@OneToMany(cascade=CascadeType.ALL, fetch=FetchType.LAZY, mappedBy="company")
    public Set<Roles> getRoleses() {
        return this.roleses;
    }
    
    public void setRoleses(Set<Roles> roleses) {
        this.roleses = roleses;
    }




}


