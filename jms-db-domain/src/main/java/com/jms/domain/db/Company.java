package com.jms.domain.db;
// Generated 2015-6-6 20:38:20 by Hibernate Tools 3.2.2.GA


import java.util.Date;
import java.util.HashSet;
import java.util.Set;
import javax.persistence.CascadeType;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import static javax.persistence.GenerationType.IDENTITY;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

/**
 * Company generated by hbm2java
 */
@Entity
@Table(name="company"
    ,catalog="jms"
)
public class Company  implements java.io.Serializable {


     private Integer idCompany;
     private District district;
     private Users users;
     private SysDicD sysDicDByCompanyType;
     private SysDicD sysDicDByCompanyNature;
     private SysDicD sysDicDByCompanySize;
     private String companyName;
     private String description;
     private Date creationTime;
     private int fineTask;
     private int enabled;
     private Float usedSpace;
     private int companyCatergory;
     private String locale;
     private Integer verified;
     private String telephone;
     private String fax;
     private String email;
     private Date establishmentTime;
     private String address;
     private String postcode;
     private String url;
     private Set<Users> userses = new HashSet<Users>(0);
     private Set<Project> projects = new HashSet<Project>(0);
     private Set<Sector> sectors = new HashSet<Sector>(0);
     private Set<Roles> roleses = new HashSet<Roles>(0);

    public Company() {
    }

	
    public Company(Users users, String companyName, Date creationTime, int fineTask, int enabled, int companyCatergory) {
        this.users = users;
        this.companyName = companyName;
        this.creationTime = creationTime;
        this.fineTask = fineTask;
        this.enabled = enabled;
        this.companyCatergory = companyCatergory;
    }
    public Company(District district, Users users, SysDicD sysDicDByCompanyType, SysDicD sysDicDByCompanyNature, SysDicD sysDicDByCompanySize, String companyName, String description, Date creationTime, int fineTask, int enabled, Float usedSpace, int companyCatergory, String locale, Integer verified, String telephone, String fax, String email, Date establishmentTime, String address, String postcode, String url, Set<Users> userses, Set<Project> projects, Set<Sector> sectors, Set<Roles> roleses) {
       this.district = district;
       this.users = users;
       this.sysDicDByCompanyType = sysDicDByCompanyType;
       this.sysDicDByCompanyNature = sysDicDByCompanyNature;
       this.sysDicDByCompanySize = sysDicDByCompanySize;
       this.companyName = companyName;
       this.description = description;
       this.creationTime = creationTime;
       this.fineTask = fineTask;
       this.enabled = enabled;
       this.usedSpace = usedSpace;
       this.companyCatergory = companyCatergory;
       this.locale = locale;
       this.verified = verified;
       this.telephone = telephone;
       this.fax = fax;
       this.email = email;
       this.establishmentTime = establishmentTime;
       this.address = address;
       this.postcode = postcode;
       this.url = url;
       this.userses = userses;
       this.projects = projects;
       this.sectors = sectors;
       this.roleses = roleses;
    }
   
     @Id @GeneratedValue(strategy=IDENTITY)
    
    @Column(name="ID_COMPANY", unique=true, nullable=false)
    public Integer getIdCompany() {
        return this.idCompany;
    }
    
    public void setIdCompany(Integer idCompany) {
        this.idCompany = idCompany;
    }
@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="ID_DISTRICT")
    public District getDistrict() {
        return this.district;
    }
    
    public void setDistrict(District district) {
        this.district = district;
    }
@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="CREATOR", nullable=false)
    public Users getUsers() {
        return this.users;
    }
    
    public void setUsers(Users users) {
        this.users = users;
    }
@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="COMPANY_TYPE")
    public SysDicD getSysDicDByCompanyType() {
        return this.sysDicDByCompanyType;
    }
    
    public void setSysDicDByCompanyType(SysDicD sysDicDByCompanyType) {
        this.sysDicDByCompanyType = sysDicDByCompanyType;
    }
@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="Company_Nature")
    public SysDicD getSysDicDByCompanyNature() {
        return this.sysDicDByCompanyNature;
    }
    
    public void setSysDicDByCompanyNature(SysDicD sysDicDByCompanyNature) {
        this.sysDicDByCompanyNature = sysDicDByCompanyNature;
    }
@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="COMPANY_SIZE")
    public SysDicD getSysDicDByCompanySize() {
        return this.sysDicDByCompanySize;
    }
    
    public void setSysDicDByCompanySize(SysDicD sysDicDByCompanySize) {
        this.sysDicDByCompanySize = sysDicDByCompanySize;
    }
    
    @Column(name="COMPANY_NAME", nullable=false, length=64)
    public String getCompanyName() {
        return this.companyName;
    }
    
    public void setCompanyName(String companyName) {
        this.companyName = companyName;
    }
    
    @Column(name="DESCRIPTION", length=1024)
    public String getDescription() {
        return this.description;
    }
    
    public void setDescription(String description) {
        this.description = description;
    }
    @Temporal(TemporalType.DATE)
    @Column(name="CREATION_TIME", nullable=false, length=10)
    public Date getCreationTime() {
        return this.creationTime;
    }
    
    public void setCreationTime(Date creationTime) {
        this.creationTime = creationTime;
    }
    
    @Column(name="FINE_TASK", nullable=false)
    public int getFineTask() {
        return this.fineTask;
    }
    
    public void setFineTask(int fineTask) {
        this.fineTask = fineTask;
    }
    
    @Column(name="ENABLED", nullable=false)
    public int getEnabled() {
        return this.enabled;
    }
    
    public void setEnabled(int enabled) {
        this.enabled = enabled;
    }
    
    @Column(name="USED_SPACE", precision=12, scale=0)
    public Float getUsedSpace() {
        return this.usedSpace;
    }
    
    public void setUsedSpace(Float usedSpace) {
        this.usedSpace = usedSpace;
    }
    
    @Column(name="COMPANY_CATERGORY", nullable=false)
    public int getCompanyCatergory() {
        return this.companyCatergory;
    }
    
    public void setCompanyCatergory(int companyCatergory) {
        this.companyCatergory = companyCatergory;
    }
    
    @Column(name="LOCALE", length=5)
    public String getLocale() {
        return this.locale;
    }
    
    public void setLocale(String locale) {
        this.locale = locale;
    }
    
    @Column(name="VERIFIED")
    public Integer getVerified() {
        return this.verified;
    }
    
    public void setVerified(Integer verified) {
        this.verified = verified;
    }
    
    @Column(name="TELEPHONE", length=20)
    public String getTelephone() {
        return this.telephone;
    }
    
    public void setTelephone(String telephone) {
        this.telephone = telephone;
    }
    
    @Column(name="FAX", length=20)
    public String getFax() {
        return this.fax;
    }
    
    public void setFax(String fax) {
        this.fax = fax;
    }
    
    @Column(name="EMAIL", length=64)
    public String getEmail() {
        return this.email;
    }
    
    public void setEmail(String email) {
        this.email = email;
    }
    @Temporal(TemporalType.DATE)
    @Column(name="ESTABLISHMENT_TIME", length=10)
    public Date getEstablishmentTime() {
        return this.establishmentTime;
    }
    
    public void setEstablishmentTime(Date establishmentTime) {
        this.establishmentTime = establishmentTime;
    }
    
    @Column(name="ADDRESS", length=128)
    public String getAddress() {
        return this.address;
    }
    
    public void setAddress(String address) {
        this.address = address;
    }
    
    @Column(name="POSTCODE", length=20)
    public String getPostcode() {
        return this.postcode;
    }
    
    public void setPostcode(String postcode) {
        this.postcode = postcode;
    }
    
    @Column(name="URL", length=128)
    public String getUrl() {
        return this.url;
    }
    
    public void setUrl(String url) {
        this.url = url;
    }
@OneToMany(cascade=CascadeType.ALL, fetch=FetchType.LAZY, mappedBy="company")
    public Set<Users> getUserses() {
        return this.userses;
    }
    
    public void setUserses(Set<Users> userses) {
        this.userses = userses;
    }
@OneToMany(cascade=CascadeType.ALL, fetch=FetchType.LAZY, mappedBy="company")
    public Set<Project> getProjects() {
        return this.projects;
    }
    
    public void setProjects(Set<Project> projects) {
        this.projects = projects;
    }
@OneToMany(cascade=CascadeType.ALL, fetch=FetchType.LAZY, mappedBy="company")
    public Set<Sector> getSectors() {
        return this.sectors;
    }
    
    public void setSectors(Set<Sector> sectors) {
        this.sectors = sectors;
    }
@OneToMany(cascade=CascadeType.ALL, fetch=FetchType.LAZY, mappedBy="company")
    public Set<Roles> getRoleses() {
        return this.roleses;
    }
    
    public void setRoleses(Set<Roles> roleses) {
        this.roleses = roleses;
    }




}


